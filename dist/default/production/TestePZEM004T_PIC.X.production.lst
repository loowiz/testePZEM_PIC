

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Aug 07 23:17:40 2022

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Version 2.40
    34                           ; Generated 17/11/2021 GMT
    35                           ; 
    36                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F4550 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     
    69                           	psect	idataCOMRAM
    70   001258                     __pidataCOMRAM:
    71                           	callstack 0
    72                           
    73                           ;initializer for leituraPZEM@F3248
    74   001258  00                 	db	0
    75   001259  04                 	db	4
    76   00125A  00                 	db	0
    77   00125B  00                 	db	0
    78   00125C  00                 	db	0
    79   00125D  0A                 	db	10
    80                           
    81                           ;initializer for IniciaLCD@F3216
    82   00125E  33                 	db	51
    83   00125F  32                 	db	50
    84   001260  28                 	db	40
    85   001261  0C                 	db	12
    86   001262  06                 	db	6
    87   001263  01                 	db	1
    88   000000                     _RCREG	set	4014
    89   000000                     _TXREG	set	4013
    90   000000                     _SPBRG	set	4015
    91   000000                     _BAUDCON	set	4024
    92   000000                     _TRISB	set	3987
    93   000000                     _TXSTAbits	set	4012
    94   000000                     _PORTBbits	set	3969
    95   000000                     _UCON	set	3949
    96   000000                     _PORTB	set	3969
    97   000000                     _TRISBbits	set	3987
    98   000000                     _TRISCbits	set	3988
    99   000000                     _PIR1bits	set	3998
   100   000000                     _RCSTA	set	4011
   101   000000                     _TXSTA	set	4012
   102   000000                     _UCFGbits	set	3951
   103                           
   104                           	psect	smallconst
   105   000800                     __psmallconst:
   106                           	callstack 0
   107   000800  00                 	db	0
   108   000801                     STR_1:
   109   000801  20                 	db	32
   110   000802  50                 	db	80	;'P'
   111   000803  5A                 	db	90	;'Z'
   112   000804  45                 	db	69	;'E'
   113   000805  4D                 	db	77	;'M'
   114   000806  2D                 	db	45
   115   000807  30                 	db	48	;'0'
   116   000808  30                 	db	48	;'0'
   117   000809  34                 	db	52	;'4'
   118   00080A  54                 	db	84	;'T'
   119   00080B  2D                 	db	45
   120   00080C  31                 	db	49	;'1'
   121   00080D  30                 	db	48	;'0'
   122   00080E  30                 	db	48	;'0'
   123   00080F  41                 	db	65	;'A'
   124   000810  20                 	db	32
   125   000811  00                 	db	0
   126   000812                     STR_16:
   127   000812  45                 	db	69	;'E'
   128   000813  72                 	db	114	;'r'
   129   000814  72                 	db	114	;'r'
   130   000815  6F                 	db	111	;'o'
   131   000816  20                 	db	32
   132   000817  64                 	db	100	;'d'
   133   000818  65                 	db	101	;'e'
   134   000819  20                 	db	32
   135   00081A  43                 	db	67	;'C'
   136   00081B  52                 	db	82	;'R'
   137   00081C  43                 	db	67	;'C'
   138   00081D  00                 	db	0
   139   00081E                     STR_13:
   140   00081E  41                 	db	65	;'A'
   141   00081F  6C                 	db	108	;'l'
   142   000820  61                 	db	97	;'a'
   143   000821  72                 	db	114	;'r'
   144   000822  6D                 	db	109	;'m'
   145   000823  65                 	db	101	;'e'
   146   000824  3A                 	db	58	;':'
   147   000825  20                 	db	32
   148   000826  00                 	db	0
   149   000827                     STR_12:
   150   000827  46                 	db	70	;'F'
   151   000828  50                 	db	80	;'P'
   152   000829  20                 	db	32
   153   00082A  3D                 	db	61	;'='
   154   00082B  20                 	db	32
   155   00082C  00                 	db	0
   156   00082D                     STR_8:
   157   00082D  45                 	db	69	;'E'
   158   00082E  20                 	db	32
   159   00082F  3D                 	db	61	;'='
   160   000830  20                 	db	32
   161   000831  00                 	db	0
   162   000832                     STR_4:
   163   000832  49                 	db	73	;'I'
   164   000833  20                 	db	32
   165   000834  3D                 	db	61	;'='
   166   000835  20                 	db	32
   167   000836  00                 	db	0
   168   000837                     STR_2:
   169   000837  56                 	db	86	;'V'
   170   000838  20                 	db	32
   171   000839  3D                 	db	61	;'='
   172   00083A  20                 	db	32
   173   00083B  00                 	db	0
   174   00083C                     STR_10:
   175   00083C  66                 	db	102	;'f'
   176   00083D  20                 	db	32
   177   00083E  3D                 	db	61	;'='
   178   00083F  20                 	db	32
   179   000840  00                 	db	0
   180   000841                     STR_14:
   181   000841  53                 	db	83	;'S'
   182   000842  49                 	db	73	;'I'
   183   000843  4D                 	db	77	;'M'
   184   000844  00                 	db	0
   185   000845                     STR_15:
   186   000845  4E                 	db	78	;'N'
   187   000846  41                 	db	65	;'A'
   188   000847  4F                 	db	79	;'O'
   189   000848  00                 	db	0
   190   000849                     STR_9:
   191   000849  20                 	db	32
   192   00084A  57                 	db	87	;'W'
   193   00084B  68                 	db	104	;'h'
   194   00084C  00                 	db	0
   195   00084D                     STR_11:
   196   00084D  20                 	db	32
   197   00084E  48                 	db	72	;'H'
   198   00084F  7A                 	db	122	;'z'
   199   000850  00                 	db	0
   200   000851                     STR_3:
   201   000851  20                 	db	32
   202   000852  56                 	db	86	;'V'
   203   000853  00                 	db	0
   204   000854                     STR_7:
   205   000854  20                 	db	32
   206   000855  57                 	db	87	;'W'
   207   000856  00                 	db	0
   208   000857  00                 	db	0	; dummy byte at the end
   209   000000                     
   210                           ; #config settings
   211                           
   212                           	psect	cinit
   213   0011A8                     __pcinit:
   214                           	callstack 0
   215   0011A8                     start_initialization:
   216                           	callstack 0
   217   0011A8                     __initialization:
   218                           	callstack 0
   219                           
   220                           ; Initialize objects allocated to COMRAM (12 bytes)
   221                           ; load TBLPTR registers with __pidataCOMRAM
   222   0011A8  0E58               	movlw	low __pidataCOMRAM
   223   0011AA  6EF6               	movwf	tblptrl,c
   224   0011AC  0E12               	movlw	high __pidataCOMRAM
   225   0011AE  6EF7               	movwf	tblptrh,c
   226   0011B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   227   0011B2  6EF8               	movwf	tblptru,c
   228   0011B4  EE00  F046         	lfsr	0,__pdataCOMRAM
   229   0011B8  EE10 F00C          	lfsr	1,12
   230   0011BC                     copy_data0:
   231   0011BC  0009               	tblrd		*+
   232   0011BE  CFF5 FFEE          	movff	tablat,postinc0
   233   0011C2  50E5               	movf	postdec1,w,c
   234   0011C4  50E1               	movf	fsr1l,w,c
   235   0011C6  E1FA               	bnz	copy_data0
   236                           
   237                           ; Clear objects allocated to BANK0 (25 bytes)
   238   0011C8  EE00  F060         	lfsr	0,__pbssBANK0
   239   0011CC  0E19               	movlw	25
   240   0011CE                     clear_0:
   241   0011CE  6AEE               	clrf	postinc0,c
   242   0011D0  06E8               	decf	wreg,f,c
   243   0011D2  E1FD               	bnz	clear_0
   244                           
   245                           ; Clear objects allocated to COMRAM (2 bytes)
   246   0011D4  6A53               	clrf	(__pbssCOMRAM+1)& (0+255),c
   247   0011D6  6A52               	clrf	__pbssCOMRAM& (0+255),c
   248   0011D8                     end_of_initialization:
   249                           	callstack 0
   250   0011D8                     __end_of__initialization:
   251                           	callstack 0
   252   0011D8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   253   0011DA  6EF8               	movwf	tblptru,c
   254   0011DC  0100               	movlb	0
   255   0011DE  EF2C  F004         	goto	_main	;jump to C main() function
   256                           
   257                           	psect	bssCOMRAM
   258   000052                     __pbssCOMRAM:
   259                           	callstack 0
   260   000052                     _finalCRC:
   261                           	callstack 0
   262   000052                     	ds	2
   263                           
   264                           	psect	dataCOMRAM
   265   000046                     __pdataCOMRAM:
   266                           	callstack 0
   267   000046                     leituraPZEM@F3248:
   268                           	callstack 0
   269   000046                     	ds	6
   270   00004C                     IniciaLCD@F3216:
   271                           	callstack 0
   272   00004C                     	ds	6
   273                           
   274                           	psect	bssBANK0
   275   000060                     __pbssBANK0:
   276                           	callstack 0
   277   000060                     _recebido:
   278                           	callstack 0
   279   000060                     	ds	25
   280                           
   281                           	psect	cstackCOMRAM
   282   000001                     __pcstackCOMRAM:
   283                           	callstack 0
   284   000001                     ??_ComandoLCD:
   285   000001                     ??_EscreveLCD:
   286   000001                     ?___lwdiv:
   287                           	callstack 0
   288   000001                     Escreve_Serial@Caractere:
   289                           	callstack 0
   290   000001                     CRCcalc@toCalc:
   291                           	callstack 0
   292   000001                     ___lwdiv@dividend:
   293                           	callstack 0
   294                           
   295                           ; 2 bytes @ 0x0
   296   000001                     	ds	1
   297   000002                     ComandoLCD@i:
   298                           	callstack 0
   299   000002                     EscreveLCD@dado:
   300                           	callstack 0
   301                           
   302                           ; 1 bytes @ 0x1
   303   000002                     	ds	1
   304   000003                     ??_CRCcalc:
   305   000003                     ComandoLCD@dado:
   306                           	callstack 0
   307   000003                     EscreveLCD@i:
   308                           	callstack 0
   309   000003                     ___lwdiv@divisor:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x2
   313   000003                     	ds	1
   314   000004                     ??_IniciaLCD:
   315   000004                     PosicionaLCD@coluna:
   316                           	callstack 0
   317   000004                     StringLCD@string:
   318                           	callstack 0
   319                           
   320                           ; 2 bytes @ 0x3
   321   000004                     	ds	1
   322   000005                     ??_PosicionaLCD:
   323   000005                     ___lwdiv@quotient:
   324                           	callstack 0
   325   000005                     IniciaLCD@inicio:
   326                           	callstack 0
   327                           
   328                           ; 6 bytes @ 0x4
   329   000005                     	ds	1
   330   000006                     
   331                           ; 1 bytes @ 0x5
   332   000006                     	ds	1
   333   000007                     PosicionaLCD@linha:
   334                           	callstack 0
   335   000007                     CRCcalc@i:
   336                           	callstack 0
   337   000007                     ___lwdiv@counter:
   338                           	callstack 0
   339                           
   340                           ; 1 bytes @ 0x6
   341   000007                     	ds	1
   342   000008                     ?___lwmod:
   343                           	callstack 0
   344   000008                     PosicionaLCD@posicao:
   345                           	callstack 0
   346   000008                     CRCcalc@j:
   347                           	callstack 0
   348   000008                     ___lwmod@dividend:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x7
   352   000008                     	ds	1
   353   000009                     CRCcalc@checksum:
   354                           	callstack 0
   355                           
   356                           ; 4 bytes @ 0x8
   357   000009                     	ds	1
   358   00000A                     ___lwmod@divisor:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0x9
   362   00000A                     	ds	1
   363   00000B                     IniciaLCD@i:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0xA
   367   00000B                     	ds	1
   368   00000C                     ___lwmod@counter:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0xB
   372   00000C                     	ds	1
   373   00000D                     NumeroLCD@numero:
   374                           	callstack 0
   375   00000D                     leituraPZEM@mensagem:
   376                           	callstack 0
   377                           
   378                           ; 6 bytes @ 0xC
   379   00000D                     	ds	2
   380   00000F                     NumeroLCD@i:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0xE
   384   00000F                     	ds	4
   385   000013                     leituraPZEM@i:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x12
   389   000013                     	ds	1
   390   000014                     ??_main:
   391                           
   392                           ; 1 bytes @ 0x13
   393   000014                     	ds	6
   394   00001A                     main@recebidoSemCRC:
   395                           	callstack 0
   396                           
   397                           ; 23 bytes @ 0x19
   398   00001A                     	ds	23
   399   000031                     main@corrente:
   400                           	callstack 0
   401                           
   402                           ; 4 bytes @ 0x30
   403   000031                     	ds	4
   404   000035                     main@potencia:
   405                           	callstack 0
   406                           
   407                           ; 4 bytes @ 0x34
   408   000035                     	ds	4
   409   000039                     main@energia:
   410                           	callstack 0
   411                           
   412                           ; 4 bytes @ 0x38
   413   000039                     	ds	4
   414   00003D                     main@tensao:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x3C
   418   00003D                     	ds	2
   419   00003F                     main@frequencia:
   420                           	callstack 0
   421                           
   422                           ; 2 bytes @ 0x3E
   423   00003F                     	ds	2
   424   000041                     main@fp:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x40
   428   000041                     	ds	2
   429   000043                     main@alarme:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x42
   433   000043                     	ds	2
   434   000045                     main@i:
   435                           	callstack 0
   436                           
   437                           ; 1 bytes @ 0x44
   438   000045                     	ds	1
   439                           
   440 ;;
   441 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
   442 ;;
   443 ;; *************** function _main *****************
   444 ;; Defined at:
   445 ;;		line 145 in file "main.c"
   446 ;; Parameters:    Size  Location     Type
   447 ;;		None
   448 ;; Auto vars:     Size  Location     Type
   449 ;;  recebidoSemC   23   25[COMRAM] unsigned char [23]
   450 ;;  energia         4   56[COMRAM] unsigned long 
   451 ;;  potencia        4   52[COMRAM] unsigned long 
   452 ;;  corrente        4   48[COMRAM] unsigned long 
   453 ;;  alarme          2   66[COMRAM] unsigned int 
   454 ;;  fp              2   64[COMRAM] unsigned int 
   455 ;;  frequencia      2   62[COMRAM] unsigned int 
   456 ;;  tensao          2   60[COMRAM] unsigned int 
   457 ;;  i               1   68[COMRAM] unsigned char 
   458 ;; Return value:  Size  Location     Type
   459 ;;                  1    wreg      void 
   460 ;; Registers used:
   461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   462 ;; Tracked objects:
   463 ;;		On entry : 0/0
   464 ;;		On exit  : 0/0
   465 ;;		Unchanged: 0/0
   466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   467 ;;      Params:         0       0       0       0       0       0       0       0       0
   468 ;;      Locals:        44       0       0       0       0       0       0       0       0
   469 ;;      Temps:          6       0       0       0       0       0       0       0       0
   470 ;;      Totals:        50       0       0       0       0       0       0       0       0
   471 ;;Total ram usage:       50 bytes
   472 ;; Hardware stack levels required when called: 2
   473 ;; This function calls:
   474 ;;		_CRCcalc
   475 ;;		_IniciaLCD
   476 ;;		_Inicializa_Serial
   477 ;;		_LimpaLCD
   478 ;;		_NumeroLCD
   479 ;;		_PosicionaLCD
   480 ;;		_StringLCD
   481 ;;		_leituraPZEM
   482 ;; This function is called by:
   483 ;;		Startup code after reset
   484 ;; This function uses a non-reentrant model
   485 ;;
   486                           
   487                           	psect	text0
   488   000858                     __ptext0:
   489                           	callstack 0
   490   000858                     _main:
   491                           	callstack 29
   492   000858                     
   493                           ;main.c: 150:                 NumeroLCD(energia);;main.c: 151:                 StringLCD
      +                          (" Wh");;main.c: 152:                 for(i = 0; i < 5; i++) _delay((unsigned long)((100
      +                          )*(4000000/4000.0)));;main.c: 153: ;main.c: 154:                 PosicionaLCD(2,1);;main
      +                          .c: 155:                 StringLCD("f = ");;main.c: 156:                 NumeroLCD(frequ
      +                          encia);;main.c: 157:                 StringLCD(" Hz");;main.c: 164: 
   494   000858  8293               	bsf	147,1,c	;volatile
   495   00085A                     
   496                           ;main.c: 165:                 PosicionaLCD(2,1);
   497   00085A  8093               	bsf	147,0,c	;volatile
   498   00085C                     
   499                           ;main.c: 166:                 StringLCD("Alarme: ");
   500   00085C  8494               	bsf	148,2,c	;volatile
   501                           
   502                           ;main.c: 167:                 if(alarme == 0xffff) StringLCD("SIM");
   503   00085E  0E00               	movlw	0
   504   000860  6E6D               	movwf	109,c	;volatile
   505   000862                     
   506                           ;main.c: 168:                 if(alarme == 0x0000) StringLCD("NAO");
   507   000862  866F               	bsf	111,3,c	;volatile
   508                           
   509                           ;main.c: 169:                 for(i = 0; i < 5; i++) _delay((unsigned long)((100)*(40000
      +                          00/4000.0)));
   510   000864  0E03               	movlw	3
   511   000866  6E93               	movwf	147,c	;volatile
   512   000868                     
   513                           ;main.c: 171:             else {
   514   000868  ECAA  F008         	call	_IniciaLCD	;wreg free
   515   00086C                     
   516                           ;main.c: 172:                 StringLCD("Erro de CRC");
   517   00086C  EC32  F009         	call	_LimpaLCD	;wreg free
   518   000870                     
   519                           ;main.c: 173:             }
   520   000870  EC17  F009         	call	_Inicializa_Serial	;wreg free
   521   000874  0E01               	movlw	1
   522   000876  6E04               	movwf	PosicionaLCD@coluna^0,c
   523   000878  0E01               	movlw	1
   524   00087A  EC10  F008         	call	_PosicionaLCD
   525   00087E  0E01               	movlw	low STR_1
   526   000880  6E04               	movwf	StringLCD@string^0,c
   527   000882  0E08               	movlw	high STR_1
   528   000884  6E05               	movwf	(StringLCD@string+1)^0,c
   529   000886  ECF1  F008         	call	_StringLCD	;wreg free
   530   00088A                     l1482:
   531   00088A  A281               	btfss	129,1,c	;volatile
   532   00088C  EF4A  F004         	goto	u681
   533   000890  EF4C  F004         	goto	u680
   534   000894                     u681:
   535   000894  EF45  F004         	goto	l1482
   536   000898                     u680:
   537   000898  0E00               	movlw	0
   538   00089A  6E31               	movwf	main@corrente^0,c
   539   00089C  0E00               	movlw	0
   540   00089E  6E32               	movwf	(main@corrente+1)^0,c
   541   0008A0  0E00               	movlw	0
   542   0008A2  6E33               	movwf	(main@corrente+2)^0,c
   543   0008A4  0E00               	movlw	0
   544   0008A6  6E34               	movwf	(main@corrente+3)^0,c
   545   0008A8  0E00               	movlw	0
   546   0008AA  6E35               	movwf	main@potencia^0,c
   547   0008AC  0E00               	movlw	0
   548   0008AE  6E36               	movwf	(main@potencia+1)^0,c
   549   0008B0  0E00               	movlw	0
   550   0008B2  6E37               	movwf	(main@potencia+2)^0,c
   551   0008B4  0E00               	movlw	0
   552   0008B6  6E38               	movwf	(main@potencia+3)^0,c
   553   0008B8  0E00               	movlw	0
   554   0008BA  6E39               	movwf	main@energia^0,c
   555   0008BC  0E00               	movlw	0
   556   0008BE  6E3A               	movwf	(main@energia+1)^0,c
   557   0008C0  0E00               	movlw	0
   558   0008C2  6E3B               	movwf	(main@energia+2)^0,c
   559   0008C4  0E00               	movlw	0
   560   0008C6  6E3C               	movwf	(main@energia+3)^0,c
   561   0008C8  0E00               	movlw	0
   562   0008CA  6E40               	movwf	(main@frequencia+1)^0,c
   563   0008CC  0E00               	movlw	0
   564   0008CE  6E3F               	movwf	main@frequencia^0,c
   565   0008D0  0E00               	movlw	0
   566   0008D2  6E42               	movwf	(main@fp+1)^0,c
   567   0008D4  0E00               	movlw	0
   568   0008D6  6E41               	movwf	main@fp^0,c
   569   0008D8  0E00               	movlw	0
   570   0008DA  6E44               	movwf	(main@alarme+1)^0,c
   571   0008DC  0E00               	movlw	0
   572   0008DE  6E43               	movwf	main@alarme^0,c
   573   0008E0  EC8E  F007         	call	_leituraPZEM	;wreg free
   574   0008E4  0E00               	movlw	0
   575   0008E6  6E45               	movwf	main@i^0,c
   576   0008E8                     l1494:
   577   0008E8  0E60               	movlw	low _recebido
   578   0008EA  2445               	addwf	main@i^0,w,c
   579   0008EC  6ED9               	movwf	fsr2l,c
   580   0008EE  6ADA               	clrf	fsr2h,c
   581   0008F0  0E00               	movlw	high _recebido
   582   0008F2  22DA               	addwfc	fsr2h,f,c
   583   0008F4  0E1A               	movlw	low main@recebidoSemCRC
   584   0008F6  2445               	addwf	main@i^0,w,c
   585   0008F8  6EE1               	movwf	fsr1l,c
   586   0008FA  6AE2               	clrf	fsr1h,c
   587   0008FC  0E00               	movlw	high main@recebidoSemCRC
   588   0008FE  22E2               	addwfc	fsr1h,f,c
   589   000900  CFDF FFE7          	movff	indf2,indf1
   590   000904  2A45               	incf	main@i^0,f,c
   591   000906  0E16               	movlw	22
   592   000908  6445               	cpfsgt	main@i^0,c
   593   00090A  EF89  F004         	goto	u691
   594   00090E  EF8B  F004         	goto	u690
   595   000912                     u691:
   596   000912  EF74  F004         	goto	l1494
   597   000916                     u690:
   598   000916  0E1A               	movlw	low main@recebidoSemCRC
   599   000918  6E01               	movwf	CRCcalc@toCalc^0,c
   600   00091A  0E00               	movlw	high main@recebidoSemCRC
   601   00091C  6E02               	movwf	(CRCcalc@toCalc+1)^0,c
   602   00091E  ECF1  F006         	call	_CRCcalc	;wreg free
   603   000922  5052               	movf	_finalCRC^0,w,c
   604   000924  0100               	movlb	0	; () banked
   605   000926  1977               	xorwf	(_recebido+23)& (0+255),w,b
   606   000928  A4D8               	btfss	status,2,c
   607   00092A  EF99  F004         	goto	u701
   608   00092E  EF9B  F004         	goto	u700
   609   000932                     u701:
   610   000932  EF4C  F006         	goto	l1628
   611   000936                     u700:
   612   000936                     
   613                           ; BSR set to: 0
   614   000936  5178               	movf	(_recebido+24)& (0+255),w,b
   615   000938  1853               	xorwf	(_finalCRC+1)^0,w,c
   616   00093A  A4D8               	btfss	status,2,c
   617   00093C  EFA2  F004         	goto	u711
   618   000940  EFA4  F004         	goto	u710
   619   000944                     u711:
   620   000944  EF4C  F006         	goto	l1628
   621   000948                     u710:
   622   000948                     
   623                           ; BSR set to: 0
   624   000948  516A               	movf	(_recebido+10)& (0+255),w,b
   625   00094A  C069  F014         	movff	_recebido+9,??_main
   626   00094E  6A15               	clrf	(??_main+1)^0,c
   627   000950  C014  F015         	movff	??_main,??_main+1
   628   000954  6A14               	clrf	??_main^0,c
   629   000956  1014               	iorwf	??_main^0,w,c
   630   000958  6E3D               	movwf	main@tensao^0,c
   631   00095A  5015               	movf	(??_main+1)^0,w,c
   632   00095C  6E3E               	movwf	(main@tensao+1)^0,c
   633   00095E  5165               	movf	(_recebido+5)& (0+255),w,b
   634   000960  6E15               	movwf	(??_main+1)^0,c
   635   000962  6A14               	clrf	??_main^0,c
   636   000964  5167               	movf	(_recebido+7)& (0+255),w,b
   637   000966  1168               	iorwf	(_recebido+8)& (0+255),w,b
   638   000968  6E16               	movwf	(??_main+2)^0,c
   639   00096A  6A17               	clrf	(??_main+3)^0,c
   640   00096C  5014               	movf	??_main^0,w,c
   641   00096E  1016               	iorwf	(??_main+2)^0,w,c
   642   000970  6E18               	movwf	(??_main+4)^0,c
   643   000972  5015               	movf	(??_main+1)^0,w,c
   644   000974  1017               	iorwf	(??_main+3)^0,w,c
   645   000976  6E19               	movwf	(??_main+5)^0,c
   646   000978  5166               	movf	(_recebido+6)& (0+255),w,b
   647   00097A  1218               	iorwf	(??_main+4)^0,f,c
   648   00097C  0E00               	movlw	0
   649   00097E  1219               	iorwf	(??_main+5)^0,f,c
   650   000980  C018  F031         	movff	??_main+4,main@corrente
   651   000984  C019  F032         	movff	??_main+5,main@corrente+1
   652   000988  0E00               	movlw	0
   653   00098A  BE32               	btfsc	(main@corrente+1)^0,7,c
   654   00098C  0EFF               	movlw	-1
   655   00098E  6E33               	movwf	(main@corrente+2)^0,c
   656   000990  6E34               	movwf	(main@corrente+3)^0,c
   657   000992  5169               	movf	(_recebido+9)& (0+255),w,b
   658   000994  6E15               	movwf	(??_main+1)^0,c
   659   000996  6A14               	clrf	??_main^0,c
   660   000998  516B               	movf	(_recebido+11)& (0+255),w,b
   661   00099A  116C               	iorwf	(_recebido+12)& (0+255),w,b
   662   00099C  6E16               	movwf	(??_main+2)^0,c
   663   00099E  6A17               	clrf	(??_main+3)^0,c
   664   0009A0  5014               	movf	??_main^0,w,c
   665   0009A2  1016               	iorwf	(??_main+2)^0,w,c
   666   0009A4  6E18               	movwf	(??_main+4)^0,c
   667   0009A6  5015               	movf	(??_main+1)^0,w,c
   668   0009A8  1017               	iorwf	(??_main+3)^0,w,c
   669   0009AA  6E19               	movwf	(??_main+5)^0,c
   670   0009AC  516A               	movf	(_recebido+10)& (0+255),w,b
   671   0009AE  1218               	iorwf	(??_main+4)^0,f,c
   672   0009B0  0E00               	movlw	0
   673   0009B2  1219               	iorwf	(??_main+5)^0,f,c
   674   0009B4  C018  F035         	movff	??_main+4,main@potencia
   675   0009B8  C019  F036         	movff	??_main+5,main@potencia+1
   676   0009BC  0E00               	movlw	0
   677   0009BE  BE36               	btfsc	(main@potencia+1)^0,7,c
   678   0009C0  0EFF               	movlw	-1
   679   0009C2  6E37               	movwf	(main@potencia+2)^0,c
   680   0009C4  6E38               	movwf	(main@potencia+3)^0,c
   681   0009C6  516D               	movf	(_recebido+13)& (0+255),w,b
   682   0009C8  6E15               	movwf	(??_main+1)^0,c
   683   0009CA  6A14               	clrf	??_main^0,c
   684   0009CC  516F               	movf	(_recebido+15)& (0+255),w,b
   685   0009CE  1170               	iorwf	(_recebido+16)& (0+255),w,b
   686   0009D0  6E16               	movwf	(??_main+2)^0,c
   687   0009D2  6A17               	clrf	(??_main+3)^0,c
   688   0009D4  5014               	movf	??_main^0,w,c
   689   0009D6  1016               	iorwf	(??_main+2)^0,w,c
   690   0009D8  6E18               	movwf	(??_main+4)^0,c
   691   0009DA  5015               	movf	(??_main+1)^0,w,c
   692   0009DC  1017               	iorwf	(??_main+3)^0,w,c
   693   0009DE  6E19               	movwf	(??_main+5)^0,c
   694   0009E0  516E               	movf	(_recebido+14)& (0+255),w,b
   695   0009E2  1218               	iorwf	(??_main+4)^0,f,c
   696   0009E4  0E00               	movlw	0
   697   0009E6  1219               	iorwf	(??_main+5)^0,f,c
   698   0009E8  C018  F039         	movff	??_main+4,main@energia
   699   0009EC  C019  F03A         	movff	??_main+5,main@energia+1
   700   0009F0  0E00               	movlw	0
   701   0009F2  BE3A               	btfsc	(main@energia+1)^0,7,c
   702   0009F4  0EFF               	movlw	-1
   703   0009F6  6E3B               	movwf	(main@energia+2)^0,c
   704   0009F8  6E3C               	movwf	(main@energia+3)^0,c
   705   0009FA  5172               	movf	(_recebido+18)& (0+255),w,b
   706   0009FC  C071  F014         	movff	_recebido+17,??_main
   707   000A00  6A15               	clrf	(??_main+1)^0,c
   708   000A02  C014  F015         	movff	??_main,??_main+1
   709   000A06  6A14               	clrf	??_main^0,c
   710   000A08  1014               	iorwf	??_main^0,w,c
   711   000A0A  6E3F               	movwf	main@frequencia^0,c
   712   000A0C  5015               	movf	(??_main+1)^0,w,c
   713   000A0E  6E40               	movwf	(main@frequencia+1)^0,c
   714   000A10  5174               	movf	(_recebido+20)& (0+255),w,b
   715   000A12  C073  F014         	movff	_recebido+19,??_main
   716   000A16  6A15               	clrf	(??_main+1)^0,c
   717   000A18  C014  F015         	movff	??_main,??_main+1
   718   000A1C  6A14               	clrf	??_main^0,c
   719   000A1E  1014               	iorwf	??_main^0,w,c
   720   000A20  6E41               	movwf	main@fp^0,c
   721   000A22  5015               	movf	(??_main+1)^0,w,c
   722   000A24  6E42               	movwf	(main@fp+1)^0,c
   723   000A26  5176               	movf	(_recebido+22)& (0+255),w,b
   724   000A28  C075  F014         	movff	_recebido+21,??_main
   725   000A2C  6A15               	clrf	(??_main+1)^0,c
   726   000A2E  C014  F015         	movff	??_main,??_main+1
   727   000A32  6A14               	clrf	??_main^0,c
   728   000A34  1014               	iorwf	??_main^0,w,c
   729   000A36  6E43               	movwf	main@alarme^0,c
   730   000A38  5015               	movf	(??_main+1)^0,w,c
   731   000A3A  6E44               	movwf	(main@alarme+1)^0,c
   732   000A3C                     
   733                           ; BSR set to: 0
   734   000A3C  0E01               	movlw	1
   735   000A3E  6E04               	movwf	PosicionaLCD@coluna^0,c
   736   000A40  0E02               	movlw	2
   737   000A42  EC10  F008         	call	_PosicionaLCD
   738   000A46  0E37               	movlw	low STR_2
   739   000A48  6E04               	movwf	StringLCD@string^0,c
   740   000A4A  0E08               	movlw	high STR_2
   741   000A4C  6E05               	movwf	(StringLCD@string+1)^0,c
   742   000A4E  ECF1  F008         	call	_StringLCD	;wreg free
   743   000A52  C03D  F00D         	movff	main@tensao,NumeroLCD@numero
   744   000A56  C03E  F00E         	movff	main@tensao+1,NumeroLCD@numero+1
   745   000A5A  EC56  F006         	call	_NumeroLCD	;wreg free
   746   000A5E  0E51               	movlw	low STR_3
   747   000A60  6E04               	movwf	StringLCD@string^0,c
   748   000A62  0E08               	movlw	high STR_3
   749   000A64  6E05               	movwf	(StringLCD@string+1)^0,c
   750   000A66  ECF1  F008         	call	_StringLCD	;wreg free
   751   000A6A  0E00               	movlw	0
   752   000A6C  6E45               	movwf	main@i^0,c
   753   000A6E                     l1522:
   754   000A6E  0E82               	movlw	130
   755   000A70  6E14               	movwf	??_main^0,c
   756   000A72  0EDE               	movlw	222
   757   000A74                     u817:
   758   000A74  2EE8               	decfsz	wreg,f,c
   759   000A76  D7FE               	bra	u817
   760   000A78  2E14               	decfsz	??_main^0,f,c
   761   000A7A  D7FC               	bra	u817
   762   000A7C  2A45               	incf	main@i^0,f,c
   763   000A7E  0E04               	movlw	4
   764   000A80  6445               	cpfsgt	main@i^0,c
   765   000A82  EF45  F005         	goto	u721
   766   000A86  EF47  F005         	goto	u720
   767   000A8A                     u721:
   768   000A8A  EF37  F005         	goto	l1522
   769   000A8E                     u720:
   770   000A8E  0E01               	movlw	1
   771   000A90  6E04               	movwf	PosicionaLCD@coluna^0,c
   772   000A92  0E02               	movlw	2
   773   000A94  EC10  F008         	call	_PosicionaLCD
   774   000A98  0E32               	movlw	low STR_4
   775   000A9A  6E04               	movwf	StringLCD@string^0,c
   776   000A9C  0E08               	movlw	high STR_4
   777   000A9E  6E05               	movwf	(StringLCD@string+1)^0,c
   778   000AA0  ECF1  F008         	call	_StringLCD	;wreg free
   779   000AA4  C031  F00D         	movff	main@corrente,NumeroLCD@numero
   780   000AA8  C032  F00E         	movff	main@corrente+1,NumeroLCD@numero+1
   781   000AAC  EC56  F006         	call	_NumeroLCD	;wreg free
   782   000AB0  0E51               	movlw	low STR_3
   783   000AB2  6E04               	movwf	StringLCD@string^0,c
   784   000AB4  0E08               	movlw	high STR_3
   785   000AB6  6E05               	movwf	(StringLCD@string+1)^0,c
   786   000AB8  ECF1  F008         	call	_StringLCD	;wreg free
   787   000ABC  0E00               	movlw	0
   788   000ABE  6E45               	movwf	main@i^0,c
   789   000AC0                     l1538:
   790   000AC0  0E82               	movlw	130
   791   000AC2  6E14               	movwf	??_main^0,c
   792   000AC4  0EDE               	movlw	222
   793   000AC6                     u827:
   794   000AC6  2EE8               	decfsz	wreg,f,c
   795   000AC8  D7FE               	bra	u827
   796   000ACA  2E14               	decfsz	??_main^0,f,c
   797   000ACC  D7FC               	bra	u827
   798   000ACE  2A45               	incf	main@i^0,f,c
   799   000AD0  0E04               	movlw	4
   800   000AD2  6445               	cpfsgt	main@i^0,c
   801   000AD4  EF6E  F005         	goto	u731
   802   000AD8  EF70  F005         	goto	u730
   803   000ADC                     u731:
   804   000ADC  EF60  F005         	goto	l1538
   805   000AE0                     u730:
   806   000AE0  0E01               	movlw	1
   807   000AE2  6E04               	movwf	PosicionaLCD@coluna^0,c
   808   000AE4  0E02               	movlw	2
   809   000AE6  EC10  F008         	call	_PosicionaLCD
   810   000AEA  0E28               	movlw	low (STR_12+1)
   811   000AEC  6E04               	movwf	StringLCD@string^0,c
   812   000AEE  0E08               	movlw	high (STR_12+1)
   813   000AF0  6E05               	movwf	(StringLCD@string+1)^0,c
   814   000AF2  ECF1  F008         	call	_StringLCD	;wreg free
   815   000AF6  C035  F00D         	movff	main@potencia,NumeroLCD@numero
   816   000AFA  C036  F00E         	movff	main@potencia+1,NumeroLCD@numero+1
   817   000AFE  EC56  F006         	call	_NumeroLCD	;wreg free
   818   000B02  0E54               	movlw	low STR_7
   819   000B04  6E04               	movwf	StringLCD@string^0,c
   820   000B06  0E08               	movlw	high STR_7
   821   000B08  6E05               	movwf	(StringLCD@string+1)^0,c
   822   000B0A  ECF1  F008         	call	_StringLCD	;wreg free
   823   000B0E  0E00               	movlw	0
   824   000B10  6E45               	movwf	main@i^0,c
   825   000B12                     l1554:
   826   000B12  0E82               	movlw	130
   827   000B14  6E14               	movwf	??_main^0,c
   828   000B16  0EDE               	movlw	222
   829   000B18                     u837:
   830   000B18  2EE8               	decfsz	wreg,f,c
   831   000B1A  D7FE               	bra	u837
   832   000B1C  2E14               	decfsz	??_main^0,f,c
   833   000B1E  D7FC               	bra	u837
   834   000B20  2A45               	incf	main@i^0,f,c
   835   000B22  0E04               	movlw	4
   836   000B24  6445               	cpfsgt	main@i^0,c
   837   000B26  EF97  F005         	goto	u741
   838   000B2A  EF99  F005         	goto	u740
   839   000B2E                     u741:
   840   000B2E  EF89  F005         	goto	l1554
   841   000B32                     u740:
   842   000B32  0E01               	movlw	1
   843   000B34  6E04               	movwf	PosicionaLCD@coluna^0,c
   844   000B36  0E02               	movlw	2
   845   000B38  EC10  F008         	call	_PosicionaLCD
   846   000B3C  0E2D               	movlw	low STR_8
   847   000B3E  6E04               	movwf	StringLCD@string^0,c
   848   000B40  0E08               	movlw	high STR_8
   849   000B42  6E05               	movwf	(StringLCD@string+1)^0,c
   850   000B44  ECF1  F008         	call	_StringLCD	;wreg free
   851   000B48  C039  F00D         	movff	main@energia,NumeroLCD@numero
   852   000B4C  C03A  F00E         	movff	main@energia+1,NumeroLCD@numero+1
   853   000B50  EC56  F006         	call	_NumeroLCD	;wreg free
   854   000B54  0E49               	movlw	low STR_9
   855   000B56  6E04               	movwf	StringLCD@string^0,c
   856   000B58  0E08               	movlw	high STR_9
   857   000B5A  6E05               	movwf	(StringLCD@string+1)^0,c
   858   000B5C  ECF1  F008         	call	_StringLCD	;wreg free
   859   000B60  0E00               	movlw	0
   860   000B62  6E45               	movwf	main@i^0,c
   861   000B64                     l1570:
   862   000B64  0E82               	movlw	130
   863   000B66  6E14               	movwf	??_main^0,c
   864   000B68  0EDE               	movlw	222
   865   000B6A                     u847:
   866   000B6A  2EE8               	decfsz	wreg,f,c
   867   000B6C  D7FE               	bra	u847
   868   000B6E  2E14               	decfsz	??_main^0,f,c
   869   000B70  D7FC               	bra	u847
   870   000B72  2A45               	incf	main@i^0,f,c
   871   000B74  0E04               	movlw	4
   872   000B76  6445               	cpfsgt	main@i^0,c
   873   000B78  EFC0  F005         	goto	u751
   874   000B7C  EFC2  F005         	goto	u750
   875   000B80                     u751:
   876   000B80  EFB2  F005         	goto	l1570
   877   000B84                     u750:
   878   000B84  0E01               	movlw	1
   879   000B86  6E04               	movwf	PosicionaLCD@coluna^0,c
   880   000B88  0E02               	movlw	2
   881   000B8A  EC10  F008         	call	_PosicionaLCD
   882   000B8E  0E3C               	movlw	low STR_10
   883   000B90  6E04               	movwf	StringLCD@string^0,c
   884   000B92  0E08               	movlw	high STR_10
   885   000B94  6E05               	movwf	(StringLCD@string+1)^0,c
   886   000B96  ECF1  F008         	call	_StringLCD	;wreg free
   887   000B9A  C03F  F00D         	movff	main@frequencia,NumeroLCD@numero
   888   000B9E  C040  F00E         	movff	main@frequencia+1,NumeroLCD@numero+1
   889   000BA2  EC56  F006         	call	_NumeroLCD	;wreg free
   890   000BA6  0E4D               	movlw	low STR_11
   891   000BA8  6E04               	movwf	StringLCD@string^0,c
   892   000BAA  0E08               	movlw	high STR_11
   893   000BAC  6E05               	movwf	(StringLCD@string+1)^0,c
   894   000BAE  ECF1  F008         	call	_StringLCD	;wreg free
   895   000BB2  0E00               	movlw	0
   896   000BB4  6E45               	movwf	main@i^0,c
   897   000BB6                     l1586:
   898   000BB6  0E82               	movlw	130
   899   000BB8  6E14               	movwf	??_main^0,c
   900   000BBA  0EDE               	movlw	222
   901   000BBC                     u857:
   902   000BBC  2EE8               	decfsz	wreg,f,c
   903   000BBE  D7FE               	bra	u857
   904   000BC0  2E14               	decfsz	??_main^0,f,c
   905   000BC2  D7FC               	bra	u857
   906   000BC4  2A45               	incf	main@i^0,f,c
   907   000BC6  0E04               	movlw	4
   908   000BC8  6445               	cpfsgt	main@i^0,c
   909   000BCA  EFE9  F005         	goto	u761
   910   000BCE  EFEB  F005         	goto	u760
   911   000BD2                     u761:
   912   000BD2  EFDB  F005         	goto	l1586
   913   000BD6                     u760:
   914   000BD6  0E01               	movlw	1
   915   000BD8  6E04               	movwf	PosicionaLCD@coluna^0,c
   916   000BDA  0E02               	movlw	2
   917   000BDC  EC10  F008         	call	_PosicionaLCD
   918   000BE0  0E27               	movlw	low STR_12
   919   000BE2  6E04               	movwf	StringLCD@string^0,c
   920   000BE4  0E08               	movlw	high STR_12
   921   000BE6  6E05               	movwf	(StringLCD@string+1)^0,c
   922   000BE8  ECF1  F008         	call	_StringLCD	;wreg free
   923   000BEC  C041  F00D         	movff	main@fp,NumeroLCD@numero
   924   000BF0  C042  F00E         	movff	main@fp+1,NumeroLCD@numero+1
   925   000BF4  EC56  F006         	call	_NumeroLCD	;wreg free
   926   000BF8  0E00               	movlw	0
   927   000BFA  6E45               	movwf	main@i^0,c
   928   000BFC                     l1602:
   929   000BFC  0E82               	movlw	130
   930   000BFE  6E14               	movwf	??_main^0,c
   931   000C00  0EDE               	movlw	222
   932   000C02                     u867:
   933   000C02  2EE8               	decfsz	wreg,f,c
   934   000C04  D7FE               	bra	u867
   935   000C06  2E14               	decfsz	??_main^0,f,c
   936   000C08  D7FC               	bra	u867
   937   000C0A  2A45               	incf	main@i^0,f,c
   938   000C0C  0E04               	movlw	4
   939   000C0E  6445               	cpfsgt	main@i^0,c
   940   000C10  EF0C  F006         	goto	u771
   941   000C14  EF0E  F006         	goto	u770
   942   000C18                     u771:
   943   000C18  EFFE  F005         	goto	l1602
   944   000C1C                     u770:
   945   000C1C  0E01               	movlw	1
   946   000C1E  6E04               	movwf	PosicionaLCD@coluna^0,c
   947   000C20  0E02               	movlw	2
   948   000C22  EC10  F008         	call	_PosicionaLCD
   949   000C26  0E1E               	movlw	low STR_13
   950   000C28  6E04               	movwf	StringLCD@string^0,c
   951   000C2A  0E08               	movlw	high STR_13
   952   000C2C  6E05               	movwf	(StringLCD@string+1)^0,c
   953   000C2E  ECF1  F008         	call	_StringLCD	;wreg free
   954   000C32  2843               	incf	main@alarme^0,w,c
   955   000C34  E106               	bnz	u781
   956   000C36  2844               	incf	(main@alarme+1)^0,w,c
   957   000C38  A4D8               	btfss	status,2,c
   958   000C3A  EF21  F006         	goto	u781
   959   000C3E  EF23  F006         	goto	u780
   960   000C42                     u781:
   961   000C42  EF29  F006         	goto	l1614
   962   000C46                     u780:
   963   000C46  0E41               	movlw	low STR_14
   964   000C48  6E04               	movwf	StringLCD@string^0,c
   965   000C4A  0E08               	movlw	high STR_14
   966   000C4C  6E05               	movwf	(StringLCD@string+1)^0,c
   967   000C4E  ECF1  F008         	call	_StringLCD	;wreg free
   968   000C52                     l1614:
   969   000C52  5043               	movf	main@alarme^0,w,c
   970   000C54  1044               	iorwf	(main@alarme+1)^0,w,c
   971   000C56  A4D8               	btfss	status,2,c
   972   000C58  EF30  F006         	goto	u791
   973   000C5C  EF32  F006         	goto	u790
   974   000C60                     u791:
   975   000C60  EF38  F006         	goto	l1618
   976   000C64                     u790:
   977   000C64  0E45               	movlw	low STR_15
   978   000C66  6E04               	movwf	StringLCD@string^0,c
   979   000C68  0E08               	movlw	high STR_15
   980   000C6A  6E05               	movwf	(StringLCD@string+1)^0,c
   981   000C6C  ECF1  F008         	call	_StringLCD	;wreg free
   982   000C70                     l1618:
   983   000C70  0E00               	movlw	0
   984   000C72  6E45               	movwf	main@i^0,c
   985   000C74                     l1624:
   986   000C74  0E82               	movlw	130
   987   000C76  6E14               	movwf	??_main^0,c
   988   000C78  0EDE               	movlw	222
   989   000C7A                     u877:
   990   000C7A  2EE8               	decfsz	wreg,f,c
   991   000C7C  D7FE               	bra	u877
   992   000C7E  2E14               	decfsz	??_main^0,f,c
   993   000C80  D7FC               	bra	u877
   994   000C82  2A45               	incf	main@i^0,f,c
   995   000C84  0E04               	movlw	4
   996   000C86  6445               	cpfsgt	main@i^0,c
   997   000C88  EF48  F006         	goto	u801
   998   000C8C  EF4A  F006         	goto	u800
   999   000C90                     u801:
  1000   000C90  EF3A  F006         	goto	l1624
  1001   000C94                     u800:
  1002   000C94  EF45  F004         	goto	l1482
  1003   000C98                     l1628:
  1004                           
  1005                           ; BSR set to: 0
  1006   000C98  0E12               	movlw	low STR_16
  1007   000C9A  6E04               	movwf	StringLCD@string^0,c
  1008   000C9C  0E08               	movlw	high STR_16
  1009   000C9E  6E05               	movwf	(StringLCD@string+1)^0,c
  1010   000CA0  ECF1  F008         	call	_StringLCD	;wreg free
  1011   000CA4  EF45  F004         	goto	l1482
  1012   000CA8  EF00  F000         	goto	start
  1013   000CAC                     __end_of_main:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _leituraPZEM *****************
  1017 ;; Defined at:
  1018 ;;		line 117 in file "main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  mensagem        6   12[COMRAM] unsigned char [6]
  1023 ;;  i               1   18[COMRAM] unsigned char 
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1033 ;;      Params:         0       0       0       0       0       0       0       0       0
  1034 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1036 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1037 ;;Total ram usage:        7 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; Hardware stack levels required when called: 1
  1040 ;; This function calls:
  1041 ;;		_CRCcalc
  1042 ;;		_Escreve_Serial
  1043 ;;		_Ler_Serial
  1044 ;;		_Verifica_Serial
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           
  1050                           	psect	text1
  1051   000F1C                     __ptext1:
  1052                           	callstack 0
  1053   000F1C                     _leituraPZEM:
  1054                           	callstack 29
  1055   000F1C                     
  1056                           ;main.c: 118: 
  1057   000F1C  0E00               	movlw	0
  1058   000F1E  6E13               	movwf	leituraPZEM@i^0,c
  1059   000F20                     
  1060                           ;main.c: 119:             CRCcalc(recebidoSemCRC);
  1061   000F20  EE20  F046         	lfsr	2,leituraPZEM@F3248
  1062   000F24  EE10  F00D         	lfsr	1,leituraPZEM@mensagem
  1063   000F28  0E05               	movlw	5
  1064   000F2A                     u651:
  1065   000F2A  CFDB FFE3          	movff	plusw2,plusw1
  1066   000F2E  06E8               	decf	wreg,f,c
  1067   000F30  E2FC               	bc	u651
  1068   000F32                     
  1069                           ;main.c: 121:             if(finalCRC[0] == recebido[23] && finalCRC[1] == recebido[24])
      +                          {
  1070   000F32  0E0D               	movlw	low leituraPZEM@mensagem
  1071   000F34  6E01               	movwf	CRCcalc@toCalc^0,c
  1072   000F36  0E00               	movlw	high leituraPZEM@mensagem
  1073   000F38  6E02               	movwf	(CRCcalc@toCalc+1)^0,c
  1074   000F3A  ECF1  F006         	call	_CRCcalc	;wreg free
  1075   000F3E                     
  1076                           ;main.c: 123:                 corrente = recebido[7] << 24 | recebido[8] << 16 | recebid
      +                          o[5] << 8 | recebido[6];
  1077   000F3E  0E00               	movlw	0
  1078   000F40  EC0C  F009         	call	_Escreve_Serial
  1079   000F44                     
  1080                           ;main.c: 124:                 potencia = recebido[11] << 24 | recebido[12] << 16 | receb
      +                          ido[9] << 8 | recebido[10];
  1081   000F44  0E04               	movlw	4
  1082   000F46  EC0C  F009         	call	_Escreve_Serial
  1083   000F4A                     
  1084                           ;main.c: 125:                 energia = recebido[15] << 24 | recebido[16] << 16 | recebi
      +                          do[13] << 8 | recebido[14];
  1085   000F4A  0E00               	movlw	0
  1086   000F4C  EC0C  F009         	call	_Escreve_Serial
  1087   000F50                     
  1088                           ;main.c: 126:                 frequencia = recebido[17] << 8 | recebido[18];
  1089   000F50  0E00               	movlw	0
  1090   000F52  EC0C  F009         	call	_Escreve_Serial
  1091   000F56                     
  1092                           ;main.c: 127:                 fp = recebido[19] << 8 | recebido[20];
  1093   000F56  0E00               	movlw	0
  1094   000F58  EC0C  F009         	call	_Escreve_Serial
  1095   000F5C                     
  1096                           ;main.c: 128:                 alarme = recebido[21] << 8 | recebido[22];
  1097   000F5C  0E0A               	movlw	10
  1098   000F5E  EC0C  F009         	call	_Escreve_Serial
  1099   000F62                     
  1100                           ;main.c: 129: 
  1101   000F62  5052               	movf	_finalCRC^0,w,c
  1102   000F64  EC0C  F009         	call	_Escreve_Serial
  1103   000F68                     
  1104                           ;main.c: 130:                 PosicionaLCD(2,1);
  1105   000F68  5053               	movf	(_finalCRC+1)^0,w,c
  1106   000F6A  EC0C  F009         	call	_Escreve_Serial
  1107                           
  1108                           ;main.c: 132:                 NumeroLCD(tensao);
  1109   000F6E  EFCD  F007         	goto	l1460
  1110   000F72                     l1454:
  1111                           
  1112                           ;main.c: 133:                 StringLCD(" V");
  1113   000F72  EC22  F009         	call	_Verifica_Serial	;wreg free
  1114   000F76  06E8               	decf	wreg,f,c
  1115   000F78  A4D8               	btfss	status,2,c
  1116   000F7A  EFC1  F007         	goto	u661
  1117   000F7E  EFC3  F007         	goto	u660
  1118   000F82                     u661:
  1119   000F82  EFCD  F007         	goto	l1460
  1120   000F86                     u660:
  1121   000F86                     
  1122                           ;main.c: 134:                 for(i = 0; i < 5; i++) _delay((unsigned long)((100)*(40000
      +                          00/4000.0)));
  1123   000F86  0E60               	movlw	low _recebido
  1124   000F88  2413               	addwf	leituraPZEM@i^0,w,c
  1125   000F8A  6ED9               	movwf	fsr2l,c
  1126   000F8C  6ADA               	clrf	fsr2h,c
  1127   000F8E  0E00               	movlw	high _recebido
  1128   000F90  22DA               	addwfc	fsr2h,f,c
  1129   000F92  EC36  F009         	call	_Ler_Serial	;wreg free
  1130   000F96  6EDF               	movwf	indf2,c
  1131   000F98                     
  1132                           ;main.c: 135: 
  1133   000F98  2A13               	incf	leituraPZEM@i^0,f,c
  1134   000F9A                     l1460:
  1135                           
  1136                           ;main.c: 132:                 NumeroLCD(tensao);
  1137   000F9A  0E18               	movlw	24
  1138   000F9C  6413               	cpfsgt	leituraPZEM@i^0,c
  1139   000F9E  EFD3  F007         	goto	u671
  1140   000FA2  EFD5  F007         	goto	u670
  1141   000FA6                     u671:
  1142   000FA6  EFB9  F007         	goto	l1454
  1143   000FAA                     u670:
  1144   000FAA  0012               	return		;funcret
  1145   000FAC                     __end_of_leituraPZEM:
  1146                           	callstack 0
  1147                           
  1148 ;; *************** function _Verifica_Serial *****************
  1149 ;; Defined at:
  1150 ;;		line 70 in file "./serial.h"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;		None
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;		None
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      unsigned char 
  1157 ;; Registers used:
  1158 ;;		wreg
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1164 ;;      Params:         0       0       0       0       0       0       0       0       0
  1165 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1167 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1168 ;;Total ram usage:        0 bytes
  1169 ;; Hardware stack levels used: 1
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_leituraPZEM
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           
  1177                           	psect	text2
  1178   001244                     __ptext2:
  1179                           	callstack 0
  1180   001244                     _Verifica_Serial:
  1181                           	callstack 29
  1182   001244                     
  1183                           ;./serial.h: 71:  return(PIR1bits.RCIF);
  1184   001244  BA9E               	btfsc	158,5,c	;volatile
  1185   001246  EF27  F009         	goto	u481
  1186   00124A  EF2A  F009         	goto	u480
  1187   00124E                     u481:
  1188   00124E  0E01               	movlw	1
  1189   001250  EF2B  F009         	goto	u486
  1190   001254                     u480:
  1191   001254  0E00               	movlw	0
  1192   001256                     u486:
  1193   001256  0012               	return		;funcret
  1194   001258                     __end_of_Verifica_Serial:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _Ler_Serial *****************
  1198 ;; Defined at:
  1199 ;;		line 79 in file "./serial.h"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      unsigned char 
  1206 ;; Registers used:
  1207 ;;		wreg, status,2
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1213 ;;      Params:         0       0       0       0       0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1216 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1217 ;;Total ram usage:        0 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_leituraPZEM
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text3
  1227   00126C                     __ptext3:
  1228                           	callstack 0
  1229   00126C                     _Ler_Serial:
  1230                           	callstack 29
  1231   00126C                     
  1232                           ;./serial.h: 80:  return(RCREG);
  1233   00126C  50AE               	movf	174,w,c	;volatile
  1234   00126E  0012               	return		;funcret
  1235   001270                     __end_of_Ler_Serial:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function _Escreve_Serial *****************
  1239 ;; Defined at:
  1240 ;;		line 59 in file "./serial.h"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  Caractere       1    wreg     unsigned char 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  Caractere       1    0[COMRAM] unsigned char 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1254 ;;      Params:         0       0       0       0       0       0       0       0       0
  1255 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1256 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1257 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1258 ;;Total ram usage:        1 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; This function calls:
  1261 ;;		Nothing
  1262 ;; This function is called by:
  1263 ;;		_leituraPZEM
  1264 ;; This function uses a non-reentrant model
  1265 ;;
  1266                           
  1267                           	psect	text4
  1268   001218                     __ptext4:
  1269                           	callstack 0
  1270   001218                     _Escreve_Serial:
  1271                           	callstack 29
  1272                           
  1273                           ;incstack = 0
  1274                           ;Escreve_Serial@Caractere stored from wreg
  1275   001218  6E01               	movwf	Escreve_Serial@Caractere^0,c
  1276   00121A                     
  1277                           ;./serial.h: 60:  TXREG = Caractere;
  1278   00121A  C001  FFAD         	movff	Escreve_Serial@Caractere,4013	;volatile
  1279   00121E                     l90:
  1280   00121E  A2AC               	btfss	172,1,c	;volatile
  1281   001220  EF14  F009         	goto	u471
  1282   001224  EF16  F009         	goto	u470
  1283   001228                     u471:
  1284   001228  EF0F  F009         	goto	l90
  1285   00122C                     u470:
  1286   00122C  0012               	return		;funcret
  1287   00122E                     __end_of_Escreve_Serial:
  1288                           	callstack 0
  1289                           
  1290 ;; *************** function _CRCcalc *****************
  1291 ;; Defined at:
  1292 ;;		line 91 in file "main.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  toCalc          2    0[COMRAM] PTR unsigned char 
  1295 ;;		 -> main@recebidoSemCRC(23), leituraPZEM@mensagem(6), 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  checksum        4    8[COMRAM] long 
  1298 ;;  j               1    7[COMRAM] unsigned char 
  1299 ;;  i               1    6[COMRAM] unsigned char 
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1309 ;;      Params:         2       0       0       0       0       0       0       0       0
  1310 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1311 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1312 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1313 ;;Total ram usage:       12 bytes
  1314 ;; Hardware stack levels used: 1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_leituraPZEM
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text5
  1324   000DE2                     __ptext5:
  1325                           	callstack 0
  1326   000DE2                     _CRCcalc:
  1327                           	callstack 29
  1328   000DE2                     
  1329                           ;main.c: 92: ;main.c: 93: 
  1330   000DE2  0EFF               	movlw	255
  1331   000DE4  6E09               	movwf	CRCcalc@checksum^0,c
  1332   000DE6  0EFF               	movlw	255
  1333   000DE8  6E0A               	movwf	(CRCcalc@checksum+1)^0,c
  1334   000DEA  0E00               	movlw	0
  1335   000DEC  6E0B               	movwf	(CRCcalc@checksum+2)^0,c
  1336   000DEE  0E00               	movlw	0
  1337   000DF0  6E0C               	movwf	(CRCcalc@checksum+3)^0,c
  1338                           
  1339                           ;main.c: 95:  PosicionaLCD(1,1);
  1340   000DF2  0E00               	movlw	0
  1341   000DF4  6E07               	movwf	CRCcalc@i^0,c
  1342   000DF6                     l1300:
  1343                           
  1344                           ;main.c: 96:  StringLCD(" PZEM-004T-100A ");
  1345   000DF6  C001  FFD9         	movff	CRCcalc@toCalc,fsr2l
  1346   000DFA  C002  FFDA         	movff	CRCcalc@toCalc+1,fsr2h
  1347   000DFE  50DF               	movf	indf2,w,c
  1348   000E00  6E03               	movwf	??_CRCcalc^0,c
  1349   000E02  5003               	movf	??_CRCcalc^0,w,c
  1350   000E04  1A09               	xorwf	CRCcalc@checksum^0,f,c
  1351   000E06                     
  1352                           ;main.c: 97: 
  1353   000E06  4A01               	infsnz	CRCcalc@toCalc^0,f,c
  1354   000E08  2A02               	incf	(CRCcalc@toCalc+1)^0,f,c
  1355   000E0A                     
  1356                           ;main.c: 98: 
  1357   000E0A  0E00               	movlw	0
  1358   000E0C  6E08               	movwf	CRCcalc@j^0,c
  1359   000E0E                     l108:
  1360                           
  1361                           ;main.c: 99: 
  1362   000E0E  B009               	btfsc	CRCcalc@checksum^0,0,c
  1363   000E10  EF0C  F007         	goto	u491
  1364   000E14  EF0E  F007         	goto	u490
  1365   000E18                     u491:
  1366   000E18  EF15  F007         	goto	l1312
  1367   000E1C                     u490:
  1368   000E1C                     
  1369                           ;main.c: 100: 
  1370   000E1C  340C               	rlcf	(CRCcalc@checksum+3)^0,w,c
  1371   000E1E  320C               	rrcf	(CRCcalc@checksum+3)^0,f,c
  1372   000E20  320B               	rrcf	(CRCcalc@checksum+2)^0,f,c
  1373   000E22  320A               	rrcf	(CRCcalc@checksum+1)^0,f,c
  1374   000E24  3209               	rrcf	CRCcalc@checksum^0,f,c
  1375                           
  1376                           ;main.c: 101: 
  1377   000E26  EF2E  F007         	goto	l1314
  1378   000E2A                     l1312:
  1379                           
  1380                           ;main.c: 103:  while(1){
  1381   000E2A  C009  F003         	movff	CRCcalc@checksum,??_CRCcalc
  1382   000E2E  C00A  F004         	movff	CRCcalc@checksum+1,??_CRCcalc+1
  1383   000E32  C00B  F005         	movff	CRCcalc@checksum+2,??_CRCcalc+2
  1384   000E36  C00C  F006         	movff	CRCcalc@checksum+3,??_CRCcalc+3
  1385   000E3A  3406               	rlcf	(??_CRCcalc+3)^0,w,c
  1386   000E3C  3206               	rrcf	(??_CRCcalc+3)^0,f,c
  1387   000E3E  3205               	rrcf	(??_CRCcalc+2)^0,f,c
  1388   000E40  3204               	rrcf	(??_CRCcalc+1)^0,f,c
  1389   000E42  3203               	rrcf	??_CRCcalc^0,f,c
  1390   000E44  0E01               	movlw	1
  1391   000E46  1803               	xorwf	??_CRCcalc^0,w,c
  1392   000E48  6E09               	movwf	CRCcalc@checksum^0,c
  1393   000E4A  0EA0               	movlw	160
  1394   000E4C  1804               	xorwf	(??_CRCcalc+1)^0,w,c
  1395   000E4E  6E0A               	movwf	(CRCcalc@checksum+1)^0,c
  1396   000E50  0E00               	movlw	0
  1397   000E52  1805               	xorwf	(??_CRCcalc+2)^0,w,c
  1398   000E54  6E0B               	movwf	(CRCcalc@checksum+2)^0,c
  1399   000E56  0E00               	movlw	0
  1400   000E58  1806               	xorwf	(??_CRCcalc+3)^0,w,c
  1401   000E5A  6E0C               	movwf	(CRCcalc@checksum+3)^0,c
  1402   000E5C                     l1314:
  1403                           
  1404                           ;main.c: 105:             tensao = 0;
  1405   000E5C  2A08               	incf	CRCcalc@j^0,f,c
  1406   000E5E  0E07               	movlw	7
  1407   000E60  6408               	cpfsgt	CRCcalc@j^0,c
  1408   000E62  EF35  F007         	goto	u501
  1409   000E66  EF37  F007         	goto	u500
  1410   000E6A                     u501:
  1411   000E6A  EF07  F007         	goto	l108
  1412   000E6E                     u500:
  1413   000E6E                     
  1414                           ;main.c: 106:             corrente = 0;
  1415   000E6E  2A07               	incf	CRCcalc@i^0,f,c
  1416   000E70  0E01               	movlw	1
  1417   000E72  6407               	cpfsgt	CRCcalc@i^0,c
  1418   000E74  EF3E  F007         	goto	u511
  1419   000E78  EF40  F007         	goto	u510
  1420   000E7C                     u511:
  1421   000E7C  EFFB  F006         	goto	l1300
  1422   000E80                     u510:
  1423   000E80                     
  1424                           ;main.c: 107:             potencia = 0;
  1425   000E80  C009  F052         	movff	CRCcalc@checksum,_finalCRC
  1426                           
  1427                           ;main.c: 108:             energia = 0;
  1428   000E84  C00A  F053         	movff	CRCcalc@checksum+1,_finalCRC+1
  1429   000E88  0012               	return		;funcret
  1430   000E8A                     __end_of_CRCcalc:
  1431                           	callstack 0
  1432                           
  1433 ;; *************** function _StringLCD *****************
  1434 ;; Defined at:
  1435 ;;		line 104 in file "./lcd_4vias.h"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  string          2    3[COMRAM] PTR const unsigned char 
  1438 ;;		 -> STR_16(12), STR_15(4), STR_14(4), STR_13(9), 
  1439 ;;		 -> STR_12(6), STR_11(4), STR_10(5), STR_9(4), 
  1440 ;;		 -> STR_8(5), STR_7(3), STR_6(5), STR_5(3), 
  1441 ;;		 -> STR_4(5), STR_3(3), STR_2(5), STR_1(17), 
  1442 ;; Auto vars:     Size  Location     Type
  1443 ;;		None
  1444 ;; Return value:  Size  Location     Type
  1445 ;;                  1    wreg      void 
  1446 ;; Registers used:
  1447 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1448 ;; Tracked objects:
  1449 ;;		On entry : 0/0
  1450 ;;		On exit  : 0/0
  1451 ;;		Unchanged: 0/0
  1452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1453 ;;      Params:         2       0       0       0       0       0       0       0       0
  1454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1456 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1457 ;;Total ram usage:        2 bytes
  1458 ;; Hardware stack levels used: 1
  1459 ;; Hardware stack levels required when called: 1
  1460 ;; This function calls:
  1461 ;;		_EscreveLCD
  1462 ;; This function is called by:
  1463 ;;		_main
  1464 ;; This function uses a non-reentrant model
  1465 ;;
  1466                           
  1467                           	psect	text6
  1468   0011E2                     __ptext6:
  1469                           	callstack 0
  1470   0011E2                     _StringLCD:
  1471                           	callstack 29
  1472   0011E2                     
  1473                           ;./lcd_4vias.h: 104: void StringLCD (const unsigned char *string);./lcd_4vias.h: 105: {;
      +                          ./lcd_4vias.h: 106:     while (*string != 0)
  1474   0011E2  EFFD  F008         	goto	l1388
  1475   0011E6                     l1384:
  1476                           
  1477                           ;./lcd_4vias.h: 107:     {;./lcd_4vias.h: 108:         EscreveLCD (*string);
  1478   0011E6  C004  FFF6         	movff	StringLCD@string,tblptrl
  1479   0011EA  C005  FFF7         	movff	StringLCD@string+1,tblptrh
  1480   0011EE                     	if	0	;tblptru may be non-zero
  1481   0011EE                     	endif
  1482   0011EE                     	if	0	;tblptru may be non-zero
  1483   0011EE                     	endif
  1484   0011EE  0008               	tblrd		*
  1485   0011F0  50F5               	movf	tablat,w,c
  1486   0011F2  EC7B  F008         	call	_EscreveLCD
  1487   0011F6                     
  1488                           ;./lcd_4vias.h: 109:         string++;
  1489   0011F6  4A04               	infsnz	StringLCD@string^0,f,c
  1490   0011F8  2A05               	incf	(StringLCD@string+1)^0,f,c
  1491   0011FA                     l1388:
  1492                           
  1493                           ;./lcd_4vias.h: 106:     while (*string != 0)
  1494   0011FA  C004  FFF6         	movff	StringLCD@string,tblptrl
  1495   0011FE  C005  FFF7         	movff	StringLCD@string+1,tblptrh
  1496   001202                     	if	0	;tblptru may be non-zero
  1497   001202                     	endif
  1498   001202                     	if	0	;tblptru may be non-zero
  1499   001202                     	endif
  1500   001202  0008               	tblrd		*
  1501   001204  50F5               	movf	tablat,w,c
  1502   001206  0900               	iorlw	0
  1503   001208  A4D8               	btfss	status,2,c
  1504   00120A  EF09  F009         	goto	u601
  1505   00120E  EF0B  F009         	goto	u600
  1506   001212                     u601:
  1507   001212  EFF3  F008         	goto	l1384
  1508   001216                     u600:
  1509   001216  0012               	return		;funcret
  1510   001218                     __end_of_StringLCD:
  1511                           	callstack 0
  1512                           
  1513 ;; *************** function _PosicionaLCD *****************
  1514 ;; Defined at:
  1515 ;;		line 153 in file "./lcd_4vias.h"
  1516 ;; Parameters:    Size  Location     Type
  1517 ;;  linha           1    wreg     unsigned char 
  1518 ;;  coluna          1    3[COMRAM] unsigned char 
  1519 ;; Auto vars:     Size  Location     Type
  1520 ;;  linha           1    6[COMRAM] unsigned char 
  1521 ;;  posicao         1    7[COMRAM] unsigned char 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, status,2, status,0, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1531 ;;      Params:         1       0       0       0       0       0       0       0       0
  1532 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1533 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1534 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1535 ;;Total ram usage:        5 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 1
  1538 ;; This function calls:
  1539 ;;		_ComandoLCD
  1540 ;; This function is called by:
  1541 ;;		_main
  1542 ;; This function uses a non-reentrant model
  1543 ;;
  1544                           
  1545                           	psect	text7
  1546   001020                     __ptext7:
  1547                           	callstack 0
  1548   001020                     _PosicionaLCD:
  1549                           	callstack 29
  1550                           
  1551                           ;incstack = 0
  1552                           ;PosicionaLCD@linha stored from wreg
  1553   001020  6E07               	movwf	PosicionaLCD@linha^0,c
  1554   001022                     
  1555                           ;./lcd_4vias.h: 153: void PosicionaLCD (unsigned char linha, unsigned char coluna);./lcd
      +                          _4vias.h: 154: {;./lcd_4vias.h: 155:     unsigned char posicao;;./lcd_4vias.h: 156:     
      +                          coluna--;
  1556   001022  0604               	decf	PosicionaLCD@coluna^0,f,c
  1557                           
  1558                           ;./lcd_4vias.h: 158:     switch (linha)
  1559   001024  EF28  F008         	goto	l1418
  1560   001028                     l1408:
  1561   001028  5004               	movf	PosicionaLCD@coluna^0,w,c
  1562   00102A  0F80               	addlw	128
  1563   00102C  6E08               	movwf	PosicionaLCD@posicao^0,c
  1564   00102E  EF45  F008         	goto	l1420
  1565   001032                     l1410:
  1566   001032  5004               	movf	PosicionaLCD@coluna^0,w,c
  1567   001034  0FC0               	addlw	192
  1568   001036  6E08               	movwf	PosicionaLCD@posicao^0,c
  1569   001038  EF45  F008         	goto	l1420
  1570   00103C                     l1412:
  1571   00103C  5004               	movf	PosicionaLCD@coluna^0,w,c
  1572   00103E  0F94               	addlw	148
  1573   001040  6E08               	movwf	PosicionaLCD@posicao^0,c
  1574   001042  EF45  F008         	goto	l1420
  1575   001046                     l1414:
  1576   001046  5004               	movf	PosicionaLCD@coluna^0,w,c
  1577   001048  0FD4               	addlw	212
  1578   00104A  6E08               	movwf	PosicionaLCD@posicao^0,c
  1579   00104C  EF45  F008         	goto	l1420
  1580   001050                     l1418:
  1581   001050  5007               	movf	PosicionaLCD@linha^0,w,c
  1582   001052  6E05               	movwf	??_PosicionaLCD^0,c
  1583   001054  6A06               	clrf	(??_PosicionaLCD+1)^0,c
  1584                           
  1585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1586                           ; Switch size 1, requested type "simple"
  1587                           ; Number of cases is 1, Range of values is 0 to 0
  1588                           ; switch strategies available:
  1589                           ; Name         Instructions Cycles
  1590                           ; simple_byte            4     3 (average)
  1591                           ;	Chosen strategy is simple_byte
  1592   001056  5006               	movf	(??_PosicionaLCD+1)^0,w,c
  1593   001058  0A00               	xorlw	0	; case 0
  1594   00105A  B4D8               	btfsc	status,2,c
  1595   00105C  EF32  F008         	goto	l1650
  1596   001060  EF45  F008         	goto	l1420
  1597   001064                     l1650:
  1598                           
  1599                           ; Switch size 1, requested type "simple"
  1600                           ; Number of cases is 4, Range of values is 1 to 4
  1601                           ; switch strategies available:
  1602                           ; Name         Instructions Cycles
  1603                           ; simple_byte           13     7 (average)
  1604                           ;	Chosen strategy is simple_byte
  1605   001064  5005               	movf	??_PosicionaLCD^0,w,c
  1606   001066  0A01               	xorlw	1	; case 1
  1607   001068  B4D8               	btfsc	status,2,c
  1608   00106A  EF14  F008         	goto	l1408
  1609   00106E  0A03               	xorlw	3	; case 2
  1610   001070  B4D8               	btfsc	status,2,c
  1611   001072  EF19  F008         	goto	l1410
  1612   001076  0A01               	xorlw	1	; case 3
  1613   001078  B4D8               	btfsc	status,2,c
  1614   00107A  EF1E  F008         	goto	l1412
  1615   00107E  0A07               	xorlw	7	; case 4
  1616   001080  B4D8               	btfsc	status,2,c
  1617   001082  EF23  F008         	goto	l1414
  1618   001086  EF45  F008         	goto	l1420
  1619   00108A                     l1420:
  1620                           
  1621                           ;./lcd_4vias.h: 166:     ComandoLCD (posicao);
  1622   00108A  5008               	movf	PosicionaLCD@posicao^0,w,c
  1623   00108C  EC45  F007         	call	_ComandoLCD
  1624   001090  0012               	return		;funcret
  1625   001092                     __end_of_PosicionaLCD:
  1626                           	callstack 0
  1627                           
  1628 ;; *************** function _NumeroLCD *****************
  1629 ;; Defined at:
  1630 ;;		line 117 in file "./lcd_4vias.h"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  numero          2   12[COMRAM] unsigned int 
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  i               1   14[COMRAM] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1644 ;;      Params:         2       0       0       0       0       0       0       0       0
  1645 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1646 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1647 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1648 ;;Total ram usage:        3 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; Hardware stack levels required when called: 1
  1651 ;; This function calls:
  1652 ;;		_EscreveLCD
  1653 ;;		___lwdiv
  1654 ;;		___lwmod
  1655 ;; This function is called by:
  1656 ;;		_main
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           	psect	text8
  1661   000CAC                     __ptext8:
  1662                           	callstack 0
  1663   000CAC                     _NumeroLCD:
  1664                           	callstack 29
  1665   000CAC                     
  1666                           ;./lcd_4vias.h: 117: void NumeroLCD (unsigned int numero);./lcd_4vias.h: 118: {;./lcd_4v
      +                          ias.h: 119:     unsigned char i;;./lcd_4vias.h: 121:     if (numero >= 10000)
  1667   000CAC  0E10               	movlw	16
  1668   000CAE  5C0D               	subwf	NumeroLCD@numero^0,w,c
  1669   000CB0  0E27               	movlw	39
  1670   000CB2  580E               	subwfb	(NumeroLCD@numero+1)^0,w,c
  1671   000CB4  A0D8               	btfss	status,0,c
  1672   000CB6  EF5F  F006         	goto	u611
  1673   000CBA  EF61  F006         	goto	u610
  1674   000CBE                     u611:
  1675   000CBE  EF71  F006         	goto	l1394
  1676   000CC2                     u610:
  1677   000CC2                     
  1678                           ;./lcd_4vias.h: 122:     {;./lcd_4vias.h: 123:         i = (numero / 10000) + 0x30;
  1679   000CC2  C00D  F001         	movff	NumeroLCD@numero,___lwdiv@dividend
  1680   000CC6  C00E  F002         	movff	NumeroLCD@numero+1,___lwdiv@dividend+1
  1681   000CCA  0E27               	movlw	39
  1682   000CCC  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1683   000CCE  0E10               	movlw	16
  1684   000CD0  6E03               	movwf	___lwdiv@divisor^0,c
  1685   000CD2  ECD6  F007         	call	___lwdiv	;wreg free
  1686   000CD6  5001               	movf	?___lwdiv^0,w,c
  1687   000CD8  0F30               	addlw	48
  1688   000CDA  6E0F               	movwf	NumeroLCD@i^0,c
  1689                           
  1690                           ;./lcd_4vias.h: 124:         EscreveLCD (i);
  1691   000CDC  500F               	movf	NumeroLCD@i^0,w,c
  1692   000CDE  EC7B  F008         	call	_EscreveLCD
  1693   000CE2                     l1394:
  1694                           
  1695                           ;./lcd_4vias.h: 127:     if (numero >= 1000)
  1696   000CE2  0EE8               	movlw	232
  1697   000CE4  5C0D               	subwf	NumeroLCD@numero^0,w,c
  1698   000CE6  0E03               	movlw	3
  1699   000CE8  580E               	subwfb	(NumeroLCD@numero+1)^0,w,c
  1700   000CEA  A0D8               	btfss	status,0,c
  1701   000CEC  EF7A  F006         	goto	u621
  1702   000CF0  EF7C  F006         	goto	u620
  1703   000CF4                     u621:
  1704   000CF4  EF96  F006         	goto	l1398
  1705   000CF8                     u620:
  1706   000CF8                     
  1707                           ;./lcd_4vias.h: 128:     {;./lcd_4vias.h: 129:         i = ((numero / 1000) % 10) + 0x30
      +                          ;
  1708   000CF8  0E03               	movlw	3
  1709   000CFA  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1710   000CFC  0EE8               	movlw	232
  1711   000CFE  6E03               	movwf	___lwdiv@divisor^0,c
  1712   000D00  C00D  F001         	movff	NumeroLCD@numero,___lwdiv@dividend
  1713   000D04  C00E  F002         	movff	NumeroLCD@numero+1,___lwdiv@dividend+1
  1714   000D08  ECD6  F007         	call	___lwdiv	;wreg free
  1715   000D0C  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1716   000D10  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1717   000D14  0E00               	movlw	0
  1718   000D16  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1719   000D18  0E0A               	movlw	10
  1720   000D1A  6E0A               	movwf	___lwmod@divisor^0,c
  1721   000D1C  EC49  F008         	call	___lwmod	;wreg free
  1722   000D20  5008               	movf	?___lwmod^0,w,c
  1723   000D22  0F30               	addlw	48
  1724   000D24  6E0F               	movwf	NumeroLCD@i^0,c
  1725                           
  1726                           ;./lcd_4vias.h: 130:         EscreveLCD (i);
  1727   000D26  500F               	movf	NumeroLCD@i^0,w,c
  1728   000D28  EC7B  F008         	call	_EscreveLCD
  1729   000D2C                     l1398:
  1730                           
  1731                           ;./lcd_4vias.h: 133:     if (numero >= 100)
  1732   000D2C  500E               	movf	(NumeroLCD@numero+1)^0,w,c
  1733   000D2E  E109               	bnz	u630
  1734   000D30  0E64               	movlw	100
  1735   000D32  5C0D               	subwf	NumeroLCD@numero^0,w,c
  1736   000D34  A0D8               	btfss	status,0,c
  1737   000D36  EF9F  F006         	goto	u631
  1738   000D3A  EFA1  F006         	goto	u630
  1739   000D3E                     u631:
  1740   000D3E  EFBB  F006         	goto	l1402
  1741   000D42                     u630:
  1742   000D42                     
  1743                           ;./lcd_4vias.h: 134:     {;./lcd_4vias.h: 135:         i = ((numero / 100) % 10) + 0x30;
  1744   000D42  0E00               	movlw	0
  1745   000D44  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1746   000D46  0E64               	movlw	100
  1747   000D48  6E03               	movwf	___lwdiv@divisor^0,c
  1748   000D4A  C00D  F001         	movff	NumeroLCD@numero,___lwdiv@dividend
  1749   000D4E  C00E  F002         	movff	NumeroLCD@numero+1,___lwdiv@dividend+1
  1750   000D52  ECD6  F007         	call	___lwdiv	;wreg free
  1751   000D56  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1752   000D5A  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1753   000D5E  0E00               	movlw	0
  1754   000D60  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1755   000D62  0E0A               	movlw	10
  1756   000D64  6E0A               	movwf	___lwmod@divisor^0,c
  1757   000D66  EC49  F008         	call	___lwmod	;wreg free
  1758   000D6A  5008               	movf	?___lwmod^0,w,c
  1759   000D6C  0F30               	addlw	48
  1760   000D6E  6E0F               	movwf	NumeroLCD@i^0,c
  1761                           
  1762                           ;./lcd_4vias.h: 136:         EscreveLCD (i);
  1763   000D70  500F               	movf	NumeroLCD@i^0,w,c
  1764   000D72  EC7B  F008         	call	_EscreveLCD
  1765   000D76                     l1402:
  1766                           
  1767                           ;./lcd_4vias.h: 139:     if (numero >= 10)
  1768   000D76  500E               	movf	(NumeroLCD@numero+1)^0,w,c
  1769   000D78  E109               	bnz	u640
  1770   000D7A  0E0A               	movlw	10
  1771   000D7C  5C0D               	subwf	NumeroLCD@numero^0,w,c
  1772   000D7E  A0D8               	btfss	status,0,c
  1773   000D80  EFC4  F006         	goto	u641
  1774   000D84  EFC6  F006         	goto	u640
  1775   000D88                     u641:
  1776   000D88  EFE0  F006         	goto	l71
  1777   000D8C                     u640:
  1778   000D8C                     
  1779                           ;./lcd_4vias.h: 140:     {;./lcd_4vias.h: 141:         i = ((numero / 10) % 10) + 0x30;
  1780   000D8C  0E00               	movlw	0
  1781   000D8E  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  1782   000D90  0E0A               	movlw	10
  1783   000D92  6E03               	movwf	___lwdiv@divisor^0,c
  1784   000D94  C00D  F001         	movff	NumeroLCD@numero,___lwdiv@dividend
  1785   000D98  C00E  F002         	movff	NumeroLCD@numero+1,___lwdiv@dividend+1
  1786   000D9C  ECD6  F007         	call	___lwdiv	;wreg free
  1787   000DA0  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1788   000DA4  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1789   000DA8  0E00               	movlw	0
  1790   000DAA  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1791   000DAC  0E0A               	movlw	10
  1792   000DAE  6E0A               	movwf	___lwmod@divisor^0,c
  1793   000DB0  EC49  F008         	call	___lwmod	;wreg free
  1794   000DB4  5008               	movf	?___lwmod^0,w,c
  1795   000DB6  0F30               	addlw	48
  1796   000DB8  6E0F               	movwf	NumeroLCD@i^0,c
  1797                           
  1798                           ;./lcd_4vias.h: 142:         EscreveLCD (i);
  1799   000DBA  500F               	movf	NumeroLCD@i^0,w,c
  1800   000DBC  EC7B  F008         	call	_EscreveLCD
  1801   000DC0                     l71:
  1802                           
  1803                           ;./lcd_4vias.h: 145:     i = (numero % 10) + 0x30;
  1804   000DC0  C00D  F008         	movff	NumeroLCD@numero,___lwmod@dividend
  1805   000DC4  C00E  F009         	movff	NumeroLCD@numero+1,___lwmod@dividend+1
  1806   000DC8  0E00               	movlw	0
  1807   000DCA  6E0B               	movwf	(___lwmod@divisor+1)^0,c
  1808   000DCC  0E0A               	movlw	10
  1809   000DCE  6E0A               	movwf	___lwmod@divisor^0,c
  1810   000DD0  EC49  F008         	call	___lwmod	;wreg free
  1811   000DD4  5008               	movf	?___lwmod^0,w,c
  1812   000DD6  0F30               	addlw	48
  1813   000DD8  6E0F               	movwf	NumeroLCD@i^0,c
  1814                           
  1815                           ;./lcd_4vias.h: 146:     EscreveLCD (i);
  1816   000DDA  500F               	movf	NumeroLCD@i^0,w,c
  1817   000DDC  EC7B  F008         	call	_EscreveLCD
  1818   000DE0  0012               	return		;funcret
  1819   000DE2                     __end_of_NumeroLCD:
  1820                           	callstack 0
  1821                           
  1822 ;; *************** function ___lwmod *****************
  1823 ;; Defined at:
  1824 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwmod.c"
  1825 ;; Parameters:    Size  Location     Type
  1826 ;;  dividend        2    7[COMRAM] unsigned int 
  1827 ;;  divisor         2    9[COMRAM] unsigned int 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  counter         1   11[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  2    7[COMRAM] unsigned int 
  1832 ;; Registers used:
  1833 ;;		wreg, status,2, status,0
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1839 ;;      Params:         4       0       0       0       0       0       0       0       0
  1840 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1841 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1842 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1843 ;;Total ram usage:        5 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; This function calls:
  1846 ;;		Nothing
  1847 ;; This function is called by:
  1848 ;;		_NumeroLCD
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text9
  1853   001092                     __ptext9:
  1854                           	callstack 0
  1855   001092                     ___lwmod:
  1856                           	callstack 29
  1857   001092  500A               	movf	___lwmod@divisor^0,w,c
  1858   001094  100B               	iorwf	(___lwmod@divisor+1)^0,w,c
  1859   001096  B4D8               	btfsc	status,2,c
  1860   001098  EF50  F008         	goto	u551
  1861   00109C  EF52  F008         	goto	u550
  1862   0010A0                     u551:
  1863   0010A0  EF76  F008         	goto	l654
  1864   0010A4                     u550:
  1865   0010A4  0E01               	movlw	1
  1866   0010A6  6E0C               	movwf	___lwmod@counter^0,c
  1867   0010A8  EF5A  F008         	goto	l1350
  1868   0010AC                     l1348:
  1869   0010AC  90D8               	bcf	status,0,c
  1870   0010AE  360A               	rlcf	___lwmod@divisor^0,f,c
  1871   0010B0  360B               	rlcf	(___lwmod@divisor+1)^0,f,c
  1872   0010B2  2A0C               	incf	___lwmod@counter^0,f,c
  1873   0010B4                     l1350:
  1874   0010B4  AE0B               	btfss	(___lwmod@divisor+1)^0,7,c
  1875   0010B6  EF5F  F008         	goto	u561
  1876   0010BA  EF61  F008         	goto	u560
  1877   0010BE                     u561:
  1878   0010BE  EF56  F008         	goto	l1348
  1879   0010C2                     u560:
  1880   0010C2                     l1352:
  1881   0010C2  500A               	movf	___lwmod@divisor^0,w,c
  1882   0010C4  5C08               	subwf	___lwmod@dividend^0,w,c
  1883   0010C6  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1884   0010C8  5809               	subwfb	(___lwmod@dividend+1)^0,w,c
  1885   0010CA  A0D8               	btfss	status,0,c
  1886   0010CC  EF6A  F008         	goto	u571
  1887   0010D0  EF6C  F008         	goto	u570
  1888   0010D4                     u571:
  1889   0010D4  EF70  F008         	goto	l1356
  1890   0010D8                     u570:
  1891   0010D8  500A               	movf	___lwmod@divisor^0,w,c
  1892   0010DA  5E08               	subwf	___lwmod@dividend^0,f,c
  1893   0010DC  500B               	movf	(___lwmod@divisor+1)^0,w,c
  1894   0010DE  5A09               	subwfb	(___lwmod@dividend+1)^0,f,c
  1895   0010E0                     l1356:
  1896   0010E0  90D8               	bcf	status,0,c
  1897   0010E2  320B               	rrcf	(___lwmod@divisor+1)^0,f,c
  1898   0010E4  320A               	rrcf	___lwmod@divisor^0,f,c
  1899   0010E6  2E0C               	decfsz	___lwmod@counter^0,f,c
  1900   0010E8  EF61  F008         	goto	l1352
  1901   0010EC                     l654:
  1902   0010EC  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1903   0010F0  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1904   0010F4  0012               	return		;funcret
  1905   0010F6                     __end_of___lwmod:
  1906                           	callstack 0
  1907                           
  1908 ;; *************** function ___lwdiv *****************
  1909 ;; Defined at:
  1910 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lwdiv.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  dividend        2    0[COMRAM] unsigned int 
  1913 ;;  divisor         2    2[COMRAM] unsigned int 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  quotient        2    4[COMRAM] unsigned int 
  1916 ;;  counter         1    6[COMRAM] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  2    0[COMRAM] unsigned int 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1926 ;;      Params:         4       0       0       0       0       0       0       0       0
  1927 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1929 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1930 ;;Total ram usage:        7 bytes
  1931 ;; Hardware stack levels used: 1
  1932 ;; This function calls:
  1933 ;;		Nothing
  1934 ;; This function is called by:
  1935 ;;		_NumeroLCD
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           	psect	text10
  1940   000FAC                     __ptext10:
  1941                           	callstack 0
  1942   000FAC                     ___lwdiv:
  1943                           	callstack 29
  1944   000FAC  0E00               	movlw	0
  1945   000FAE  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  1946   000FB0  0E00               	movlw	0
  1947   000FB2  6E05               	movwf	___lwdiv@quotient^0,c
  1948   000FB4  5003               	movf	___lwdiv@divisor^0,w,c
  1949   000FB6  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1950   000FB8  B4D8               	btfsc	status,2,c
  1951   000FBA  EFE1  F007         	goto	u521
  1952   000FBE  EFE3  F007         	goto	u520
  1953   000FC2                     u521:
  1954   000FC2  EF0B  F008         	goto	l644
  1955   000FC6                     u520:
  1956   000FC6  0E01               	movlw	1
  1957   000FC8  6E07               	movwf	___lwdiv@counter^0,c
  1958   000FCA  EFEB  F007         	goto	l1330
  1959   000FCE                     l1328:
  1960   000FCE  90D8               	bcf	status,0,c
  1961   000FD0  3603               	rlcf	___lwdiv@divisor^0,f,c
  1962   000FD2  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1963   000FD4  2A07               	incf	___lwdiv@counter^0,f,c
  1964   000FD6                     l1330:
  1965   000FD6  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  1966   000FD8  EFF0  F007         	goto	u531
  1967   000FDC  EFF2  F007         	goto	u530
  1968   000FE0                     u531:
  1969   000FE0  EFE7  F007         	goto	l1328
  1970   000FE4                     u530:
  1971   000FE4                     l1332:
  1972   000FE4  90D8               	bcf	status,0,c
  1973   000FE6  3605               	rlcf	___lwdiv@quotient^0,f,c
  1974   000FE8  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1975   000FEA  5003               	movf	___lwdiv@divisor^0,w,c
  1976   000FEC  5C01               	subwf	___lwdiv@dividend^0,w,c
  1977   000FEE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1978   000FF0  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1979   000FF2  A0D8               	btfss	status,0,c
  1980   000FF4  EFFE  F007         	goto	u541
  1981   000FF8  EF00  F008         	goto	u540
  1982   000FFC                     u541:
  1983   000FFC  EF05  F008         	goto	l1340
  1984   001000                     u540:
  1985   001000  5003               	movf	___lwdiv@divisor^0,w,c
  1986   001002  5E01               	subwf	___lwdiv@dividend^0,f,c
  1987   001004  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  1988   001006  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1989   001008  8005               	bsf	___lwdiv@quotient^0,0,c
  1990   00100A                     l1340:
  1991   00100A  90D8               	bcf	status,0,c
  1992   00100C  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1993   00100E  3203               	rrcf	___lwdiv@divisor^0,f,c
  1994   001010  2E07               	decfsz	___lwdiv@counter^0,f,c
  1995   001012  EFF2  F007         	goto	l1332
  1996   001016                     l644:
  1997   001016  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1998   00101A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1999   00101E  0012               	return		;funcret
  2000   001020                     __end_of___lwdiv:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _EscreveLCD *****************
  2004 ;; Defined at:
  2005 ;;		line 80 in file "./lcd_4vias.h"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  dado            1    wreg     unsigned char 
  2008 ;; Auto vars:     Size  Location     Type
  2009 ;;  dado            1    1[COMRAM] unsigned char 
  2010 ;;  i               1    2[COMRAM] unsigned char 
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, status,2, status,0
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0
  2021 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2022 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2023 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2024 ;;Total ram usage:        3 bytes
  2025 ;; Hardware stack levels used: 1
  2026 ;; This function calls:
  2027 ;;		Nothing
  2028 ;; This function is called by:
  2029 ;;		_StringLCD
  2030 ;;		_NumeroLCD
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           	psect	text11
  2035   0010F6                     __ptext11:
  2036                           	callstack 0
  2037   0010F6                     _EscreveLCD:
  2038                           	callstack 29
  2039                           
  2040                           ;incstack = 0
  2041                           ;EscreveLCD@dado stored from wreg
  2042   0010F6  6E02               	movwf	EscreveLCD@dado^0,c
  2043   0010F8                     
  2044                           ;./lcd_4vias.h: 80: void EscreveLCD (unsigned char dado);./lcd_4vias.h: 81: {;./lcd_4via
      +                          s.h: 82:     unsigned char i;;./lcd_4vias.h: 84:     for (i = 0; i < 2; i++)
  2045   0010F8  0E00               	movlw	0
  2046   0010FA  6E03               	movwf	EscreveLCD@i^0,c
  2047   0010FC                     l1266:
  2048                           
  2049                           ;./lcd_4vias.h: 85:     {;./lcd_4vias.h: 86:         if (i) PORTB = ((PORTB & 0B00001111
      +                          ) | (dado <<4));
  2050   0010FC  5003               	movf	EscreveLCD@i^0,w,c
  2051   0010FE  B4D8               	btfsc	status,2,c
  2052   001100  EF84  F008         	goto	u451
  2053   001104  EF86  F008         	goto	u450
  2054   001108                     u451:
  2055   001108  EF91  F008         	goto	l1270
  2056   00110C                     u450:
  2057   00110C  C002  F001         	movff	EscreveLCD@dado,??_EscreveLCD
  2058   001110  3A01               	swapf	??_EscreveLCD^0,f,c
  2059   001112  0EF0               	movlw	240
  2060   001114  1601               	andwf	??_EscreveLCD^0,f,c
  2061   001116  5081               	movf	129,w,c	;volatile
  2062   001118  0B0F               	andlw	15
  2063   00111A  1001               	iorwf	??_EscreveLCD^0,w,c
  2064   00111C  6E81               	movwf	129,c	;volatile
  2065   00111E  EF95  F008         	goto	l1272
  2066   001122                     l1270:
  2067   001122  5081               	movf	129,w,c	;volatile
  2068   001124  0B0F               	andlw	15
  2069   001126  1002               	iorwf	EscreveLCD@dado^0,w,c
  2070   001128  6E81               	movwf	129,c	;volatile
  2071   00112A                     l1272:
  2072                           
  2073                           ;./lcd_4vias.h: 89:         PORTBbits.RB2 = 1;
  2074   00112A  8481               	bsf	129,2,c	;volatile
  2075   00112C                     
  2076                           ;./lcd_4vias.h: 90:         PORTBbits.RB3 = 1;
  2077   00112C  8681               	bsf	129,3,c	;volatile
  2078   00112E                     
  2079                           ;./lcd_4vias.h: 91:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  2080   00112E  0E10               	movlw	16
  2081   001130                     u887:
  2082   001130  2EE8               	decfsz	wreg,f,c
  2083   001132  D7FE               	bra	u887
  2084   001134  D000               	nop2	
  2085   001136                     
  2086                           ;./lcd_4vias.h: 93:         PORTBbits.RB3 = 0;
  2087   001136  9681               	bcf	129,3,c	;volatile
  2088                           
  2089                           ;./lcd_4vias.h: 94:     }
  2090   001138  2A03               	incf	EscreveLCD@i^0,f,c
  2091   00113A  0E01               	movlw	1
  2092   00113C  6403               	cpfsgt	EscreveLCD@i^0,c
  2093   00113E  EFA3  F008         	goto	u461
  2094   001142  EFA5  F008         	goto	u460
  2095   001146                     u461:
  2096   001146  EF7E  F008         	goto	l1266
  2097   00114A                     u460:
  2098   00114A                     
  2099                           ;./lcd_4vias.h: 96:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  2100   00114A  0E10               	movlw	16
  2101   00114C                     u897:
  2102   00114C  2EE8               	decfsz	wreg,f,c
  2103   00114E  D7FE               	bra	u897
  2104   001150  D000               	nop2	
  2105   001152  0012               	return		;funcret
  2106   001154                     __end_of_EscreveLCD:
  2107                           	callstack 0
  2108                           
  2109 ;; *************** function _LimpaLCD *****************
  2110 ;; Defined at:
  2111 ;;		line 173 in file "./lcd_4vias.h"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;		None
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, status,2, status,0, cstack
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2125 ;;      Params:         0       0       0       0       0       0       0       0       0
  2126 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2128 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2129 ;;Total ram usage:        0 bytes
  2130 ;; Hardware stack levels used: 1
  2131 ;; Hardware stack levels required when called: 1
  2132 ;; This function calls:
  2133 ;;		_ComandoLCD
  2134 ;; This function is called by:
  2135 ;;		_main
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           	psect	text12
  2140   001264                     __ptext12:
  2141                           	callstack 0
  2142   001264                     _LimpaLCD:
  2143                           	callstack 29
  2144   001264                     
  2145                           ;./lcd_4vias.h: 175:     ComandoLCD (0x01);
  2146   001264  0E01               	movlw	1
  2147   001266  EC45  F007         	call	_ComandoLCD
  2148   00126A  0012               	return		;funcret
  2149   00126C                     __end_of_LimpaLCD:
  2150                           	callstack 0
  2151                           
  2152 ;; *************** function _Inicializa_Serial *****************
  2153 ;; Defined at:
  2154 ;;		line 23 in file "./serial.h"
  2155 ;; Parameters:    Size  Location     Type
  2156 ;;		None
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;		None
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  1    wreg      void 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2168 ;;      Params:         0       0       0       0       0       0       0       0       0
  2169 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2171 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2172 ;;Total ram usage:        0 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_main
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text13
  2182   00122E                     __ptext13:
  2183                           	callstack 0
  2184   00122E                     _Inicializa_Serial:
  2185                           	callstack 30
  2186   00122E                     
  2187                           ;./serial.h: 24:  TRISCbits.TRISC7 = 1;
  2188   00122E  8E94               	bsf	148,7,c	;volatile
  2189                           
  2190                           ;./serial.h: 25:  TRISCbits.TRISC6 = 1;
  2191   001230  8C94               	bsf	148,6,c	;volatile
  2192   001232                     
  2193                           ;./serial.h: 27:  TXSTA = 0b00100000;
  2194   001232  0E20               	movlw	32
  2195   001234  6EAC               	movwf	172,c	;volatile
  2196                           
  2197                           ;./serial.h: 28:  RCSTA = 0b10010000;
  2198   001236  0E90               	movlw	144
  2199   001238  6EAB               	movwf	171,c	;volatile
  2200                           
  2201                           ;./serial.h: 29:  BAUDCON = 0b01000000;
  2202   00123A  0E40               	movlw	64
  2203   00123C  6EB8               	movwf	184,c	;volatile
  2204                           
  2205                           ;./serial.h: 32:  SPBRG = 31;
  2206   00123E  0E1F               	movlw	31
  2207   001240  6EAF               	movwf	175,c	;volatile
  2208   001242  0012               	return		;funcret
  2209   001244                     __end_of_Inicializa_Serial:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _IniciaLCD *****************
  2213 ;; Defined at:
  2214 ;;		line 38 in file "./lcd_4vias.h"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;  inicio          6    4[COMRAM] unsigned char [6]
  2219 ;;  i               1   10[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  1    wreg      void 
  2222 ;; Registers used:
  2223 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2229 ;;      Params:         0       0       0       0       0       0       0       0       0
  2230 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2231 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2232 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2233 ;;Total ram usage:        8 bytes
  2234 ;; Hardware stack levels used: 1
  2235 ;; Hardware stack levels required when called: 1
  2236 ;; This function calls:
  2237 ;;		_ComandoLCD
  2238 ;; This function is called by:
  2239 ;;		_main
  2240 ;; This function uses a non-reentrant model
  2241 ;;
  2242                           
  2243                           	psect	text14
  2244   001154                     __ptext14:
  2245                           	callstack 0
  2246   001154                     _IniciaLCD:
  2247                           	callstack 29
  2248   001154                     
  2249                           ;./lcd_4vias.h: 40:     unsigned char i;;./lcd_4vias.h: 41:     unsigned char inicio[6] 
      +                          = {0x33, 0x32, 0x28, 0x0C, 0x06, 0x01};
  2250   001154  EE20  F04C         	lfsr	2,IniciaLCD@F3216
  2251   001158  EE10  F005         	lfsr	1,IniciaLCD@inicio
  2252   00115C  0E05               	movlw	5
  2253   00115E                     u581:
  2254   00115E  CFDB FFE3          	movff	plusw2,plusw1
  2255   001162  06E8               	decf	wreg,f,c
  2256   001164  E2FC               	bc	u581
  2257   001166                     
  2258                           ;./lcd_4vias.h: 43:     PORTB = PORTB & 0B00001111;
  2259   001166  5081               	movf	129,w,c	;volatile
  2260   001168  0B0F               	andlw	15
  2261   00116A  6E81               	movwf	129,c	;volatile
  2262   00116C                     
  2263                           ;./lcd_4vias.h: 44:     PORTBbits.RB2 = 0;
  2264   00116C  9481               	bcf	129,2,c	;volatile
  2265   00116E                     
  2266                           ;./lcd_4vias.h: 45:     PORTBbits.RB3 = 0;
  2267   00116E  9681               	bcf	129,3,c	;volatile
  2268   001170                     
  2269                           ;./lcd_4vias.h: 47:     _delay((unsigned long)((15)*(4000000/4000.0)));
  2270   001170  0E14               	movlw	20
  2271   001172  6E04               	movwf	??_IniciaLCD^0,c
  2272   001174  0E7A               	movlw	122
  2273   001176                     u907:
  2274   001176  2EE8               	decfsz	wreg,f,c
  2275   001178  D7FE               	bra	u907
  2276   00117A  2E04               	decfsz	??_IniciaLCD^0,f,c
  2277   00117C  D7FC               	bra	u907
  2278   00117E                     
  2279                           ;./lcd_4vias.h: 50:     for (i = 0; i < 6; i++) ComandoLCD (inicio[i]);
  2280   00117E  0E00               	movlw	0
  2281   001180  6E0B               	movwf	IniciaLCD@i^0,c
  2282   001182                     l1376:
  2283   001182  0E05               	movlw	low IniciaLCD@inicio
  2284   001184  240B               	addwf	IniciaLCD@i^0,w,c
  2285   001186  6ED9               	movwf	fsr2l,c
  2286   001188  6ADA               	clrf	fsr2h,c
  2287   00118A  0E00               	movlw	high IniciaLCD@inicio
  2288   00118C  22DA               	addwfc	fsr2h,f,c
  2289   00118E  50DF               	movf	indf2,w,c
  2290   001190  EC45  F007         	call	_ComandoLCD
  2291   001194  2A0B               	incf	IniciaLCD@i^0,f,c
  2292   001196  0E05               	movlw	5
  2293   001198  640B               	cpfsgt	IniciaLCD@i^0,c
  2294   00119A  EFD1  F008         	goto	u591
  2295   00119E  EFD3  F008         	goto	u590
  2296   0011A2                     u591:
  2297   0011A2  EFC1  F008         	goto	l1376
  2298   0011A6                     u590:
  2299   0011A6  0012               	return		;funcret
  2300   0011A8                     __end_of_IniciaLCD:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function _ComandoLCD *****************
  2304 ;; Defined at:
  2305 ;;		line 56 in file "./lcd_4vias.h"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  dado            1    wreg     unsigned char 
  2308 ;; Auto vars:     Size  Location     Type
  2309 ;;  dado            1    2[COMRAM] unsigned char 
  2310 ;;  i               1    1[COMRAM] unsigned char 
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		wreg, status,2, status,0
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2320 ;;      Params:         0       0       0       0       0       0       0       0       0
  2321 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2322 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2323 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2324 ;;Total ram usage:        3 bytes
  2325 ;; Hardware stack levels used: 1
  2326 ;; This function calls:
  2327 ;;		Nothing
  2328 ;; This function is called by:
  2329 ;;		_IniciaLCD
  2330 ;;		_PosicionaLCD
  2331 ;;		_LimpaLCD
  2332 ;; This function uses a non-reentrant model
  2333 ;;
  2334                           
  2335                           	psect	text15
  2336   000E8A                     __ptext15:
  2337                           	callstack 0
  2338   000E8A                     _ComandoLCD:
  2339                           	callstack 29
  2340                           
  2341                           ;incstack = 0
  2342                           ;ComandoLCD@dado stored from wreg
  2343   000E8A  6E03               	movwf	ComandoLCD@dado^0,c
  2344   000E8C                     
  2345                           ;./lcd_4vias.h: 56: void ComandoLCD (unsigned char dado);./lcd_4vias.h: 57: {;./lcd_4via
      +                          s.h: 58:     unsigned char i;;./lcd_4vias.h: 60:     for (i = 0; i < 2; i++)
  2346   000E8C  0E00               	movlw	0
  2347   000E8E  6E02               	movwf	ComandoLCD@i^0,c
  2348   000E90                     l1236:
  2349                           
  2350                           ;./lcd_4vias.h: 61:     {;./lcd_4vias.h: 62:         if (i) PORTB = ((PORTB & 0B00001111
      +                          ) | (dado <<4));
  2351   000E90  5002               	movf	ComandoLCD@i^0,w,c
  2352   000E92  B4D8               	btfsc	status,2,c
  2353   000E94  EF4E  F007         	goto	u411
  2354   000E98  EF50  F007         	goto	u410
  2355   000E9C                     u411:
  2356   000E9C  EF5B  F007         	goto	l1240
  2357   000EA0                     u410:
  2358   000EA0  C003  F001         	movff	ComandoLCD@dado,??_ComandoLCD
  2359   000EA4  3A01               	swapf	??_ComandoLCD^0,f,c
  2360   000EA6  0EF0               	movlw	240
  2361   000EA8  1601               	andwf	??_ComandoLCD^0,f,c
  2362   000EAA  5081               	movf	129,w,c	;volatile
  2363   000EAC  0B0F               	andlw	15
  2364   000EAE  1001               	iorwf	??_ComandoLCD^0,w,c
  2365   000EB0  6E81               	movwf	129,c	;volatile
  2366   000EB2  EF5F  F007         	goto	l1242
  2367   000EB6                     l1240:
  2368   000EB6  5081               	movf	129,w,c	;volatile
  2369   000EB8  0B0F               	andlw	15
  2370   000EBA  1003               	iorwf	ComandoLCD@dado^0,w,c
  2371   000EBC  6E81               	movwf	129,c	;volatile
  2372   000EBE                     l1242:
  2373                           
  2374                           ;./lcd_4vias.h: 65:         PORTBbits.RB2 = 0;
  2375   000EBE  9481               	bcf	129,2,c	;volatile
  2376   000EC0                     
  2377                           ;./lcd_4vias.h: 66:         PORTBbits.RB3 = 1;
  2378   000EC0  8681               	bsf	129,3,c	;volatile
  2379   000EC2                     
  2380                           ;./lcd_4vias.h: 67:         _delay((unsigned long)((50)*(4000000/4000000.0)));
  2381   000EC2  0E10               	movlw	16
  2382   000EC4                     u917:
  2383   000EC4  2EE8               	decfsz	wreg,f,c
  2384   000EC6  D7FE               	bra	u917
  2385   000EC8  D000               	nop2	
  2386   000ECA                     
  2387                           ;./lcd_4vias.h: 69:         PORTBbits.RB3 = 0;
  2388   000ECA  9681               	bcf	129,3,c	;volatile
  2389                           
  2390                           ;./lcd_4vias.h: 70:     }
  2391   000ECC  2A02               	incf	ComandoLCD@i^0,f,c
  2392   000ECE  0E01               	movlw	1
  2393   000ED0  6402               	cpfsgt	ComandoLCD@i^0,c
  2394   000ED2  EF6D  F007         	goto	u421
  2395   000ED6  EF6F  F007         	goto	u420
  2396   000EDA                     u421:
  2397   000EDA  EF48  F007         	goto	l1236
  2398   000EDE                     u420:
  2399   000EDE                     
  2400                           ;./lcd_4vias.h: 72:     if ((dado == 0x01) || (dado == 0x02)) _delay((unsigned long)((2)
      +                          *(4000000/4000.0)));
  2401   000EDE  0403               	decf	ComandoLCD@dado^0,w,c
  2402   000EE0  B4D8               	btfsc	status,2,c
  2403   000EE2  EF75  F007         	goto	u431
  2404   000EE6  EF77  F007         	goto	u430
  2405   000EEA                     u431:
  2406   000EEA  EF80  F007         	goto	l1256
  2407   000EEE                     u430:
  2408   000EEE  0E02               	movlw	2
  2409   000EF0  1803               	xorwf	ComandoLCD@dado^0,w,c
  2410   000EF2  A4D8               	btfss	status,2,c
  2411   000EF4  EF7E  F007         	goto	u441
  2412   000EF8  EF80  F007         	goto	u440
  2413   000EFC                     u441:
  2414   000EFC  EF89  F007         	goto	l1258
  2415   000F00                     u440:
  2416   000F00                     l1256:
  2417   000F00  0E03               	movlw	3
  2418   000F02  6E01               	movwf	??_ComandoLCD^0,c
  2419   000F04  0E98               	movlw	152
  2420   000F06                     u927:
  2421   000F06  2EE8               	decfsz	wreg,f,c
  2422   000F08  D7FE               	bra	u927
  2423   000F0A  2E01               	decfsz	??_ComandoLCD^0,f,c
  2424   000F0C  D7FC               	bra	u927
  2425   000F0E  EF8D  F007         	goto	l52
  2426   000F12                     l1258:
  2427   000F12  0E10               	movlw	16
  2428   000F14                     u937:
  2429   000F14  2EE8               	decfsz	wreg,f,c
  2430   000F16  D7FE               	bra	u937
  2431   000F18  D000               	nop2	
  2432   000F1A                     l52:
  2433   000F1A  0012               	return		;funcret
  2434   000F1C                     __end_of_ComandoLCD:
  2435                           	callstack 0
  2436                           
  2437                           	psect	rparam
  2438   000000                     
  2439                           	psect	idloc
  2440                           
  2441                           ;Config register IDLOC0 @ 0x200000
  2442                           ;	unspecified, using default values
  2443   200000                     	org	2097152
  2444   200000  FF                 	db	255
  2445                           
  2446                           ;Config register IDLOC1 @ 0x200001
  2447                           ;	unspecified, using default values
  2448   200001                     	org	2097153
  2449   200001  FF                 	db	255
  2450                           
  2451                           ;Config register IDLOC2 @ 0x200002
  2452                           ;	unspecified, using default values
  2453   200002                     	org	2097154
  2454   200002  FF                 	db	255
  2455                           
  2456                           ;Config register IDLOC3 @ 0x200003
  2457                           ;	unspecified, using default values
  2458   200003                     	org	2097155
  2459   200003  FF                 	db	255
  2460                           
  2461                           ;Config register IDLOC4 @ 0x200004
  2462                           ;	unspecified, using default values
  2463   200004                     	org	2097156
  2464   200004  FF                 	db	255
  2465                           
  2466                           ;Config register IDLOC5 @ 0x200005
  2467                           ;	unspecified, using default values
  2468   200005                     	org	2097157
  2469   200005  FF                 	db	255
  2470                           
  2471                           ;Config register IDLOC6 @ 0x200006
  2472                           ;	unspecified, using default values
  2473   200006                     	org	2097158
  2474   200006  FF                 	db	255
  2475                           
  2476                           ;Config register IDLOC7 @ 0x200007
  2477                           ;	unspecified, using default values
  2478   200007                     	org	2097159
  2479   200007  FF                 	db	255
  2480                           
  2481                           	psect	config
  2482                           
  2483                           ;Config register CONFIG1L @ 0x300000
  2484                           ;	PLL Prescaler Selection bits
  2485                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2486                           ;	System Clock Postscaler Selection bits
  2487                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2488                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2489                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2490   300000                     	org	3145728
  2491   300000  00                 	db	0
  2492                           
  2493                           ;Config register CONFIG1H @ 0x300001
  2494                           ;	Oscillator Selection bits
  2495                           ;	FOSC = HS, HS oscillator (HS)
  2496                           ;	Fail-Safe Clock Monitor Enable bit
  2497                           ;	FCMEN = 0x0, unprogrammed default
  2498                           ;	Internal/External Oscillator Switchover bit
  2499                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2500   300001                     	org	3145729
  2501   300001  0C                 	db	12
  2502                           
  2503                           ;Config register CONFIG2L @ 0x300002
  2504                           ;	Power-up Timer Enable bit
  2505                           ;	PWRT = ON, PWRT enabled
  2506                           ;	Brown-out Reset Enable bits
  2507                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2508                           ;	Brown-out Reset Voltage bits
  2509                           ;	BORV = 0, Maximum setting 4.59V
  2510                           ;	USB Voltage Regulator Enable bit
  2511                           ;	VREGEN = OFF, USB voltage regulator disabled
  2512   300002                     	org	3145730
  2513   300002  00                 	db	0
  2514                           
  2515                           ;Config register CONFIG2H @ 0x300003
  2516                           ;	Watchdog Timer Enable bit
  2517                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2518                           ;	Watchdog Timer Postscale Select bits
  2519                           ;	WDTPS = 1, 1:1
  2520   300003                     	org	3145731
  2521   300003  00                 	db	0
  2522                           
  2523                           ; Padding undefined space
  2524   300004                     	org	3145732
  2525   300004  FF                 	db	255
  2526                           
  2527                           ;Config register CONFIG3H @ 0x300005
  2528                           ;	CCP2 MUX bit
  2529                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2530                           ;	PORTB A/D Enable bit
  2531                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2532                           ;	Low-Power Timer 1 Oscillator Enable bit
  2533                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2534                           ;	MCLR Pin Enable bit
  2535                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2536   300005                     	org	3145733
  2537   300005  81                 	db	129
  2538                           
  2539                           ;Config register CONFIG4L @ 0x300006
  2540                           ;	Stack Full/Underflow Reset Enable bit
  2541                           ;	STVREN = 0x1, unprogrammed default
  2542                           ;	Single-Supply ICSP Enable bit
  2543                           ;	LVP = OFF, Single-Supply ICSP disabled
  2544                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2545                           ;	ICPRT = OFF, ICPORT disabled
  2546                           ;	Extended Instruction Set Enable bit
  2547                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2548                           ;	Background Debugger Enable bit
  2549                           ;	DEBUG = 0x1, unprogrammed default
  2550   300006                     	org	3145734
  2551   300006  81                 	db	129
  2552                           
  2553                           ; Padding undefined space
  2554   300007                     	org	3145735
  2555   300007  FF                 	db	255
  2556                           
  2557                           ;Config register CONFIG5L @ 0x300008
  2558                           ;	Code Protection bit
  2559                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2560                           ;	Code Protection bit
  2561                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2562                           ;	Code Protection bit
  2563                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2564                           ;	Code Protection bit
  2565                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2566   300008                     	org	3145736
  2567   300008  0F                 	db	15
  2568                           
  2569                           ;Config register CONFIG5H @ 0x300009
  2570                           ;	Boot Block Code Protection bit
  2571                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2572                           ;	Data EEPROM Code Protection bit
  2573                           ;	CPD = OFF, Data EEPROM is not code-protected
  2574   300009                     	org	3145737
  2575   300009  C0                 	db	192
  2576                           
  2577                           ;Config register CONFIG6L @ 0x30000A
  2578                           ;	Write Protection bit
  2579                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2580                           ;	Write Protection bit
  2581                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2582                           ;	Write Protection bit
  2583                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2584                           ;	Write Protection bit
  2585                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2586   30000A                     	org	3145738
  2587   30000A  0F                 	db	15
  2588                           
  2589                           ;Config register CONFIG6H @ 0x30000B
  2590                           ;	Configuration Register Write Protection bit
  2591                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2592                           ;	Boot Block Write Protection bit
  2593                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2594                           ;	Data EEPROM Write Protection bit
  2595                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2596   30000B                     	org	3145739
  2597   30000B  E0                 	db	224
  2598                           
  2599                           ;Config register CONFIG7L @ 0x30000C
  2600                           ;	Table Read Protection bit
  2601                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2602                           ;	Table Read Protection bit
  2603                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2604                           ;	Table Read Protection bit
  2605                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2606                           ;	Table Read Protection bit
  2607                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2608   30000C                     	org	3145740
  2609   30000C  0F                 	db	15
  2610                           
  2611                           ;Config register CONFIG7H @ 0x30000D
  2612                           ;	Boot Block Table Read Protection bit
  2613                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2614   30000D                     	org	3145741
  2615   30000D  40                 	db	64
  2616                           tosu	equ	0xFFF
  2617                           tosh	equ	0xFFE
  2618                           tosl	equ	0xFFD
  2619                           stkptr	equ	0xFFC
  2620                           pclatu	equ	0xFFB
  2621                           pclath	equ	0xFFA
  2622                           pcl	equ	0xFF9
  2623                           tblptru	equ	0xFF8
  2624                           tblptrh	equ	0xFF7
  2625                           tblptrl	equ	0xFF6
  2626                           tablat	equ	0xFF5
  2627                           prodh	equ	0xFF4
  2628                           prodl	equ	0xFF3
  2629                           indf0	equ	0xFEF
  2630                           postinc0	equ	0xFEE
  2631                           postdec0	equ	0xFED
  2632                           preinc0	equ	0xFEC
  2633                           plusw0	equ	0xFEB
  2634                           fsr0h	equ	0xFEA
  2635                           fsr0l	equ	0xFE9
  2636                           wreg	equ	0xFE8
  2637                           indf1	equ	0xFE7
  2638                           postinc1	equ	0xFE6
  2639                           postdec1	equ	0xFE5
  2640                           preinc1	equ	0xFE4
  2641                           plusw1	equ	0xFE3
  2642                           fsr1h	equ	0xFE2
  2643                           fsr1l	equ	0xFE1
  2644                           bsr	equ	0xFE0
  2645                           indf2	equ	0xFDF
  2646                           postinc2	equ	0xFDE
  2647                           postdec2	equ	0xFDD
  2648                           preinc2	equ	0xFDC
  2649                           plusw2	equ	0xFDB
  2650                           fsr2h	equ	0xFDA
  2651                           fsr2l	equ	0xFD9
  2652                           status	equ	0xFD8

Data Sizes:
    Strings     86
    Constant    0
    Data        12
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     69      83
    BANK0           160      0      25
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    CRCcalc@toCalc	PTR unsigned char  size(2) Largest target is 23
		 -> main@recebidoSemCRC(COMRAM[23]), leituraPZEM@mensagem(COMRAM[6]), 

    StringLCD@string	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_16(CODE[12]), STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[9]), 
		 -> STR_12(CODE[6]), STR_11(CODE[4]), STR_10(CODE[5]), STR_9(CODE[4]), 
		 -> STR_8(CODE[5]), STR_7(CODE[3]), STR_6(CODE[5]), STR_5(CODE[3]), 
		 -> STR_4(CODE[5]), STR_3(CODE[3]), STR_2(CODE[5]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_leituraPZEM
    _leituraPZEM->_CRCcalc
    _StringLCD->_EscreveLCD
    _PosicionaLCD->_ComandoLCD
    _NumeroLCD->___lwmod
    ___lwmod->___lwdiv
    _LimpaLCD->_ComandoLCD
    _IniciaLCD->_ComandoLCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0    6556
                                             19 COMRAM    50    50      0
                            _CRCcalc
                          _IniciaLCD
                  _Inicializa_Serial
                           _LimpaLCD
                          _NumeroLCD
                       _PosicionaLCD
                          _StringLCD
                        _leituraPZEM
 ---------------------------------------------------------------------------------
 (1) _leituraPZEM                                          7     7      0     451
                                             12 COMRAM     7     7      0
                            _CRCcalc
                     _Escreve_Serial
                         _Ler_Serial
                    _Verifica_Serial
 ---------------------------------------------------------------------------------
 (2) _Verifica_Serial                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Ler_Serial                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Escreve_Serial                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _CRCcalc                                             12    10      2     359
                                              0 COMRAM    12    10      2
 ---------------------------------------------------------------------------------
 (1) _StringLCD                                            2     0      2    1373
                                              3 COMRAM     2     0      2
                         _EscreveLCD
 ---------------------------------------------------------------------------------
 (1) _PosicionaLCD                                         5     4      1     901
                                              3 COMRAM     5     4      1
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (1) _NumeroLCD                                            3     1      2    2418
                                             12 COMRAM     3     1      2
                         _EscreveLCD
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     767
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     770
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _EscreveLCD                                           3     3      0     112
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LimpaLCD                                             0     0      0     156
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Serial                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IniciaLCD                                            8     8      0     248
                                              3 COMRAM     8     8      0
                         _ComandoLCD
 ---------------------------------------------------------------------------------
 (2) _ComandoLCD                                           3     3      0     156
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CRCcalc
   _IniciaLCD
     _ComandoLCD
   _Inicializa_Serial
   _LimpaLCD
     _ComandoLCD
   _NumeroLCD
     _EscreveLCD
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
   _PosicionaLCD
     _ComandoLCD
   _StringLCD
     _EscreveLCD
   _leituraPZEM
     _CRCcalc
     _Escreve_Serial
     _Ler_Serial
     _Verifica_Serial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      19       5       15.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     45      53       1       87.4%
BITBIGSFRhhhh       47      0       0      20        0.0%
BITBIGSFRlhh        11      0       0      25        0.0%
BITBIGSFRhl         11      0       0      24        0.0%
BITBIGSFRll          D      0       0      27        0.0%
BITBIGSFRhhlh        C      0       0      22        0.0%
BITBIGSFRhhll        9      0       0      23        0.0%
BITBIGSFRhhhlh       8      0       0      21        0.0%
BITBIGSFRlhl         1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      6C      28        0.0%
DATA                 0      0      6C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Aug 07 23:17:40 2022

                       l41 11A6                         l52 0F1A                         l71 0DC0  
                       l72 0DE0                         l81 1090                         l65 1216  
                       l90 121E                         l59 1152                         l84 126A  
                       l93 122C                         l87 1242                         l96 1256  
                       l99 126E                        l112 0E88                        l121 0FAA  
                      l107 0E80                        l108 0E0E                 IniciaLCD@i 000B  
                      l651 101E                        l644 1016                        l661 10F4  
                      l654 10EC                        u410 0EA0                        u411 0E9C  
                      u420 0EDE                        u500 0E6E                        u421 0EDA  
                      u501 0E6A                        u430 0EEE                        u510 0E80  
                      u431 0EEA                        u511 0E7C                        u440 0F00  
                      u520 0FC6                        u600 1216                        u441 0EFC  
                      u521 0FC2                        u601 1212                        u450 110C  
                      u530 0FE4                        u610 0CC2                        u451 1108  
                      u531 0FE0                        u611 0CBE                        u460 114A  
                      u540 1000                        u620 0CF8                        u700 0936  
                      u461 1146                        u541 0FFC                        u621 0CF4  
                      u701 0932                        u550 10A4                        u630 0D42  
                      u470 122C                        u710 0948                        u551 10A0  
                      u631 0D3E                        u471 1228                        u711 0944  
                      u560 10C2                        u640 0D8C                        u480 1254  
                      u800 0C94                        u720 0A8E                        u561 10BE  
                      u641 0D88                        u481 124E                        u801 0C90  
                      u721 0A8A                        u570 10D8                        u490 0E1C  
                      u730 0AE0                        u571 10D4                        u491 0E18  
                      u651 0F2A                        u731 0ADC                        u660 0F86  
                      u740 0B32                        u581 115E                        u661 0F82  
                      u741 0B2E                        u590 11A6                        u486 1256  
                      u670 0FAA                        u750 0B84                        u591 11A2  
                      u671 0FA6                        u751 0B80                        u760 0BD6  
                      u680 0898                        u761 0BD2                        u817 0A74  
                      u681 0894                        u770 0C1C                        u690 0916  
                      u907 1176                        u771 0C18                        u827 0AC6  
                      u691 0912                        u780 0C46                        u917 0EC4  
                      u781 0C42                        u837 0B18                        u790 0C64  
                      u927 0F06                        u791 0C60                        u847 0B6A  
                      u937 0F14                        u857 0BBC                        u867 0C02  
                      u877 0C7A                        u887 1130                        u897 114C  
                      wreg 000FE8                EscreveLCD@i 0003            ?_Escreve_Serial 0001  
          __end_of_CRCcalc 0E8A                main@energia 0039                       l1300 0DF6  
                     l1230 0E8C                       l1310 0E1C                       l1302 0E06  
                     l1240 0EB6                       l1400 0D42                       l1320 0E70  
                     l1312 0E2A                       l1304 0E0A                       l1250 0ECE  
                     l1242 0EBE                       l1330 0FD6                       l1322 0FAC  
                     l1402 0D76                       l1410 1032                       l1314 0E5C  
                     l1252 0EDE                       l1244 0EC0                       l1236 0E90  
                     l1260 10F8                       l1340 100A                       l1332 0FE4  
                     l1324 0FB4                       l1404 0D8C                       l1412 103C  
                     l1420 108A                       l1316 0E5E                       l1500 0916  
                     l1254 0EEE                       l1246 0EC2                       l1238 0EA0  
                     l1430 1232                       l1270 1122                       l1342 1010  
                     l1334 0FEA                       l1326 0FC6                       l1350 10B4  
                     l1414 1046                       l1406 1022                       l1318 0E6E  
                     l1510 0A46                       l1502 0922                       l1256 0F00  
                     l1248 0ECA                       l1360 1154                       l1280 113A  
                     l1272 112A                       l1336 1000                       l1328 0FCE  
                     l1352 10C2                       l1344 1092                       l1408 1028  
                     l1440 0F44                       l1432 0F1C                       l1512 0A52  
                     l1504 0936                       l1258 0F12                       l1370 117E  
                     l1362 1166                       l1426 1264                       l1282 114A  
                     l1274 112C                       l1266 10FC                       l1338 1008  
                     l1354 10D8                       l1346 10A4                       l1418 1050  
                     l1290 126C                       l1450 0F62                       l1442 0F4A  
                     l1434 0F20                       l1610 0C32                       l1602 0BFC  
                     l1530 0AA4                       l1522 0A6E                       l1514 0A5E  
                     l1506 0948                       l1380 1196                       l1364 116C  
                     l1428 122E                       l1276 112E                       l1268 110C  
                     l1356 10E0                       l1348 10AC                       l1284 121A  
                     l1460 0F9A                       l1452 0F68                       l1444 0F50  
                     l1436 0F32                       l1612 0C46                       l1604 0C0A  
                     l1540 0ACE                       l1532 0ABC                       l1524 0A7C  
                     l1516 0A6A                       l1508 0A3C                       l1366 116E  
                     l1278 1136                       l1358 10E6                       l1390 0CAC  
                     l1382 11E2                       l1294 0DE2                       l1286 1244  
                     l1454 0F72                       l1446 0F56                       l1438 0F3E  
                     l1614 0C52                       l1606 0C1C                       l1542 0AE0  
                     l1526 0A8E                       l1470 0862                       l1462 0858  
                     l1376 1182                       l1368 1170                       l1392 0CC2  
                     l1384 11E6                       l1456 0F86                       l1448 0F5C  
                     l1624 0C74                       l1616 0C64                       l1608 0C26  
                     l1560 0B3C                       l1544 0AEA                       l1528 0A98  
                     l1480 087E                       l1472 0868                       l1464 0858  
                     l1378 1194                       l1394 0CE2                       l1650 1064  
                     l1386 11F6                       l1458 0F98                       l1626 0C82  
                     l1618 0C70                       l1570 0B64                       l1562 0B48  
                     l1554 0B12                       l1546 0AF6                       l1538 0AC0  
                     l1482 088A                       l1474 086C                       l1466 085A  
                     l1396 0CF8                       l1388 11FA                       l1580 0BB2  
                     l1572 0B72                       l1564 0B60                       l1556 0B20  
                     l1548 0B0E                       l1628 0C98                       l1484 0898  
                     l1476 0870                       l1468 085C                       l1398 0D2C  
                     l1590 0BD6                       l1574 0B84                       l1558 0B32  
                     l1494 08E8                       l1486 08E0                       l1478 0874  
                     l1592 0BE0                       l1576 0B8E                       l1496 0904  
                     l1488 08E4                       l1594 0BEC                       l1586 0BB6  
                     l1578 0B9A                       l1498 0906                       l1596 0BF8  
                     l1588 0BC4                       STR_1 0801                       STR_2 0837  
                     STR_3 0851                       STR_4 0832                       STR_5 0851  
                     STR_6 0828                       STR_7 0854                       STR_8 082D  
                     STR_9 0849                       _UCON 000F6D                       _main 0858  
                     fsr2h 000FDA                       indf1 000FE7                       indf2 000FDF  
                     fsr1l 000FE1                       fsr2l 000FD9                       start 0000  
             ___param_bank 000000                      ?_main 0001               ?_leituraPZEM 0001  
                    STR_10 083C                      STR_11 084D                      STR_12 0827  
                    STR_13 081E                      STR_14 0841                      STR_15 0845  
                    STR_16 0812                 _ComandoLCD 0E8A               main@corrente 0031  
          __end_of___lwdiv 1020            __end_of___lwmod 10F6                      _RCREG 000FAE  
                    _RCSTA 000FAB                      _SPBRG 000FAF                      _PORTB 000F81  
                    _TRISB 000F93                      _TXREG 000FAD                      _TXSTA 000FAC  
                    main@i 0045                      tablat 000FF5               main@potencia 0035  
               _EscreveLCD 10F6                      plusw1 000FE3                      plusw2 000FDB  
                    status 000FD8                 _Ler_Serial 126C            __initialization 11A8  
             __end_of_main 0CAC            _Verifica_Serial 1244           __end_of_LimpaLCD 126C  
                   ??_main 0014              __activetblptr 000002                  ??_CRCcalc 0003  
               NumeroLCD@i 000F                  ??___lwdiv 0005                  ??___lwmod 000C  
                   clear_0 11CE                     isa$std 000001                     main@fp 0041  
              ?_ComandoLCD 0001               __pdataCOMRAM 0046         main@recebidoSemCRC 001A  
             __mediumconst 0000                     tblptrh 000FF7                     tblptrl 000FF6  
                   tblptru 000FF8              CRCcalc@toCalc 0001                ?_EscreveLCD 0001  
               __accesstop 0060    __end_of__initialization 11D8                ?_Ler_Serial 0001  
            ___rparam_used 000001    __end_of_Verifica_Serial 1258             __pcstackCOMRAM 0001  
           EscreveLCD@dado 0002        leituraPZEM@mensagem 000D          __end_of_IniciaLCD 11A8  
         ??_Escreve_Serial 0001                 __pbssBANK0 0060                  ?_LimpaLCD 0001  
        __end_of_NumeroLCD 0DE2             IniciaLCD@F3216 004C             ComandoLCD@dado 0003  
                  _BAUDCON 000FB8          __end_of_StringLCD 1218                    _CRCcalc 0DE2  
           main@frequencia 003F                 ??_LimpaLCD 0004          _Inicializa_Serial 122E  
         ?_Verifica_Serial 0001         ?_Inicializa_Serial 0001                    __Hparam 0000  
                  __Lparam 0000              ?_PosicionaLCD 0004                    ___lwdiv 0FAC  
                  ___lwmod 1092        ??_Inicializa_Serial 0001               __psmallconst 0800  
                  __pcinit 11A8               leituraPZEM@i 0013                    __ramtop 0800  
                  __ptext0 0858                    __ptext1 0F1C                    __ptext2 1244  
                  __ptext3 126C                    __ptext4 1218                    __ptext5 0DE2  
                  __ptext6 11E2                    __ptext7 1020                    __ptext8 0CAC  
                  __ptext9 1092       end_of_initialization 11D8  __end_of_Inicializa_Serial 1244  
            __Lmediumconst 0000             ??_PosicionaLCD 0005                    postdec1 000FE5  
                  postinc0 000FEE                  _PORTBbits 000F81               ??_ComandoLCD 0001  
                _TRISBbits 000F93                  _TRISCbits 000F94               ??_EscreveLCD 0001  
               main@alarme 0043               ??_Ler_Serial 0001                  _TXSTAbits 000FAC  
               main@tensao 003D         __end_of_ComandoLCD 0F1C            NumeroLCD@numero 000D  
            __pidataCOMRAM 1258         __end_of_EscreveLCD 1154                  _IniciaLCD 1154  
       __end_of_Ler_Serial 1270        start_initialization 11A8                  _NumeroLCD 0CAC  
            ??_leituraPZEM 000D                   ?_CRCcalc 0001                 ?_IniciaLCD 0001  
              __pbssCOMRAM 0052                  _StringLCD 11E2                   CRCcalc@i 0007  
                 CRCcalc@j 0008       __end_of_PosicionaLCD 1092        PosicionaLCD@posicao 0008  
         leituraPZEM@F3248 0046            StringLCD@string 0004           ___lwdiv@dividend 0001  
               ?_NumeroLCD 000D                   ?___lwdiv 0001                   ?___lwmod 0008  
              __smallconst 0800                 ?_StringLCD 0004        __end_of_leituraPZEM 0FAC  
  Escreve_Serial@Caractere 0001           ___lwdiv@quotient 0005            IniciaLCD@inicio 0005  
                 _PIR1bits 000F9E                   _UCFGbits 000F6F                ??_IniciaLCD 0004  
                copy_data0 11BC                   _LimpaLCD 1264                   __Hrparam 0000  
                 __Lrparam 0000                ??_NumeroLCD 000F         PosicionaLCD@coluna 0004  
              _leituraPZEM 0F1C                ??_StringLCD 0006            ___lwdiv@divisor 0003  
          ___lwdiv@counter 0007                   _finalCRC 0052                   __ptext10 0FAC  
                 __ptext11 10F6                   __ptext12 1264                   __ptext13 122E  
                 __ptext14 1154                   __ptext15 0E8A                   _recebido 0060  
             _PosicionaLCD 1020                   isa$xinst 000000          ??_Verifica_Serial 0001  
        PosicionaLCD@linha 0007             _Escreve_Serial 1218                ComandoLCD@i 0002  
         ___lwmod@dividend 0008            CRCcalc@checksum 0009            ___lwmod@divisor 000A  
          ___lwmod@counter 000C     __end_of_Escreve_Serial 122E  
